{"ast":null,"code":"var _jsxFileName = \"/var/www/1001guide.net/backend/resources/backend/src/components/forms/FormImage.js\";\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { routerUrl, siteUrl } from \"../../helpers/client-server\";\nimport Loading from '../Loading';\n\nconst FormImage = ({\n  name,\n  value,\n  initImage,\n  setValue,\n  size = \"1000x1500\"\n}) => {\n  const [image, setImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorText, setErrorText] = useState(null);\n  const imgInput = useRef(null);\n\n  const handleImagePick = () => {\n    setIsLoading(true);\n    const file = imgInput.current.files[0];\n    if (!file) return;\n    let data = new FormData();\n    data.set(\"image\", file);\n    data.set(\"action\", \"image_upload\");\n    data.set(\"size\", size);\n    axios.post(routerUrl, data).then(response => {\n      if (response.data.error) setErrorText(response.data.error);else {\n        setImage(response.data.image);\n        setValue(name, response.data.id);\n      }\n      setIsLoading(false);\n    }).catch(error => {\n      setErrorText(error.toString());\n      setIsLoading(false);\n    });\n  };\n\n  const imagePreview = React.createElement(\"div\", {\n    className: \"image-preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, image || initImage ? React.createElement(\"img\", {\n    src: siteUrl + (image || initImage),\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }) : \"Изображение не выбрано\");\n  const loadedContent = isLoading ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }) : errorText || imagePreview;\n  return React.createElement(\"div\", {\n    className: \"card image-uploader mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\"), React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control-file\",\n    ref: imgInput,\n    onChange: handleImagePick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"hidden\",\n    name: name,\n    value: value,\n    onChange: setValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), loadedContent));\n};\n\nexport default FormImage;","map":{"version":3,"sources":["/var/www/1001guide.net/backend/resources/backend/src/components/forms/FormImage.js"],"names":["React","useState","useRef","axios","routerUrl","siteUrl","Loading","FormImage","name","value","initImage","setValue","size","image","setImage","isLoading","setIsLoading","errorText","setErrorText","imgInput","handleImagePick","file","current","files","data","FormData","set","post","then","response","error","id","catch","toString","imagePreview","loadedContent"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from 'react';\r\nimport axios from 'axios';\r\nimport {routerUrl, siteUrl} from \"../../helpers/client-server\";\r\nimport Loading from '../Loading';\r\n\r\nconst FormImage = ({name, value, initImage, setValue, size=\"1000x1500\"}) => {\r\n\r\n  const [image, setImage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorText, setErrorText] = useState(null);\r\n\r\n  const imgInput = useRef(null);\r\n\r\n\r\n  const handleImagePick = () => {\r\n    setIsLoading(true);\r\n    const file = imgInput.current.files[0];\r\n    if ( !file ) return;\r\n\r\n    let data = new FormData();\r\n    data.set(\"image\", file);\r\n    data.set(\"action\", \"image_upload\");\r\n    data.set(\"size\", size);\r\n\r\n    axios.post(routerUrl, data)\r\n    .then(response => {\r\n      if ( response.data.error )\r\n        setErrorText(response.data.error);\r\n      else {\r\n        setImage(response.data.image);\r\n        setValue(name, response.data.id);\r\n      }\r\n      setIsLoading(false);\r\n    })\r\n    .catch(error => {\r\n      setErrorText(error.toString());\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const imagePreview = (\r\n    <div className=\"image-preview\">\r\n      {(image || initImage) ? (<img src={siteUrl + (image || initImage)} alt=\"\"/>) : \"Изображение не выбрано\"}\r\n    </div>\r\n  );\r\n\r\n  const loadedContent = isLoading ?\r\n    (<Loading/>) :\r\n    errorText || imagePreview;\r\n\r\n  return (\r\n    <div className=\"card image-uploader mb-3\">\r\n      <div className=\"card-body\">\r\n        <div className=\"form-group\">\r\n          <label>Выберите изображение</label>\r\n          <input type=\"file\" className=\"form-control-file\" ref={imgInput} onChange={handleImagePick} />\r\n          <input type=\"hidden\" name={name} value={value} onChange={setValue} />\r\n        </div>\r\n        {loadedContent}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default FormImage;"]},"metadata":{},"sourceType":"module"}