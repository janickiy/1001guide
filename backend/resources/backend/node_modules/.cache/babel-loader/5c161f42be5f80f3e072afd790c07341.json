{"ast":null,"code":"var _jsxFileName = \"/var/www/1001guide.net/backend/resources/backend/src/components/tables/DataTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport CheckboxColumn from './CheckboxColumn';\nimport CheckAllCheckbox from './CheckAllCheckbox';\nimport ButtonRemoveAll from './ButtonRemoveAll';\nimport ActionIcons from './ActionIcons';\nimport { generateActionLinks } from '../../helpers/tables';\nimport { sendRequest } from \"../../helpers/client-server\";\nimport { Link } from 'react-router-dom';\n\nconst DataTable = ({\n  listItems,\n  tableData,\n  columnWithLink,\n  actions = [\"edit\", \"delete\"],\n  setError,\n  setIsLoading,\n  setListItems,\n  type\n}) => {\n  // checkbox states\n  const [checkboxes, setCheckboxes] = useState({});\n  const [checkedAll, setCheckedAll] = useState(false);\n  useEffect(() => {\n    if (Object.entries(listItems).length !== 0) {\n      setCheckboxes(() => {\n        let checkboxesObject = {};\n        listItems.forEach(item => {\n          checkboxesObject[item.id] = false;\n        });\n        return checkboxesObject;\n      });\n    }\n  }, [listItems]); // if no elements to show\n\n  if (Object.entries(listItems).length === 0 && listItems.constructor === Object) {\n    return React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"\\u041D\\u0435\\u0442 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432 \\u0434\\u043B\\u044F \\u043F\\u043E\\u043A\\u0430\\u0437\\u0430\");\n  } // handle checkbox click\n\n\n  const handleCheckbox = e => {\n    const target = e.target;\n    const value = target.checked;\n    const name = target.name;\n    setCheckboxes({ ...checkboxes,\n      [name]: value\n    });\n  }; // handle all checkbox click\n\n\n  const handleAllChecked = e => {\n    e.preventDefault();\n    const newCheckedAll = !checkedAll;\n    setCheckboxes(() => {\n      let newCheckboxes = {};\n      Object.keys(checkboxes).forEach(function (item) {\n        newCheckboxes[item] = newCheckedAll;\n      });\n      return newCheckboxes;\n    });\n    setCheckedAll(newCheckedAll);\n  }; // remove all\n\n\n  const handleRemoveAll = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    let idsToRemove = [],\n        idsToStay = [];\n    Object.keys(checkboxes).forEach(function (id) {\n      if (checkboxes[id] === true) idsToRemove.push(Number(id));else idsToStay.push(Number(id));\n    });\n    sendRequest(`${type}/multiple`, 'post', {\n      _method: \"DELETE\",\n      ids: idsToRemove.join(\",\")\n    }).then(response => {\n      console.log(response); // on error\n\n      if (response.data.hasOwnProperty('error')) {\n        setError(response.data.error);\n        setIsLoading(false);\n        return false;\n      } // remove items from list\n\n\n      setListItems(listItems.filter(item => idsToStay.includes(Number(item.id))));\n      setIsLoading(false);\n    });\n  }; // remove one item by ID\n\n\n  const handleRemove = id => {\n    setIsLoading(true);\n    sendRequest(`${type}/${id}`, 'post', {\n      _method: \"DELETE\"\n    }).then(response => {\n      console.log(response); // on error\n\n      if (response.data.hasOwnProperty('error')) {\n        setError(response.data.error);\n        setIsLoading(false);\n        return false;\n      } // remove items from list\n\n\n      setListItems(listItems.filter(item => item.id !== id));\n      setIsLoading(false);\n    });\n  }; // choose link in title: editing or viewing\n\n\n  const titleLinkType = actions.includes(\"show\") ? \"show\" : \"edit\"; // rows\n\n  let rows = listItems.map((item, rowIndex) => {\n    if (Object.entries(checkboxes).length === 0) {\n      return null;\n    }\n\n    const links = generateActionLinks(actions, item.id, item); // cols\n\n    let cols = tableData.map((field, columnIndex) => {\n      return React.createElement(\"td\", {\n        key: columnIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, columnIndex === columnWithLink ? React.createElement(Link, {\n        to: links[titleLinkType],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, item[field]) : item[field]);\n    });\n    const checkboxCol = actions.includes(\"delete\") ? React.createElement(CheckboxColumn, {\n      id: item.id,\n      handleCheckbox: handleCheckbox,\n      isChecked: checkboxes[item.id],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }) : null;\n    return React.createElement(\"tr\", {\n      key: rowIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, checkboxCol, cols, React.createElement(ActionIcons, {\n      edit: links.edit,\n      view: links.view,\n      remove: actions.includes(\"delete\") ? handleRemove : null,\n      id: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }));\n  });\n  const checkAllRow = actions.includes(\"delete\") ? React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(CheckAllCheckbox, {\n    handleAllChecked: handleAllChecked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-sm-6 text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(ButtonRemoveAll, {\n    handleRemoveAll: handleRemoveAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }))) : null;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, checkAllRow, React.createElement(\"table\", {\n    className: \"table table-striped items-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, rows)));\n};\n\nexport default DataTable;","map":{"version":3,"sources":["/var/www/1001guide.net/backend/resources/backend/src/components/tables/DataTable.js"],"names":["React","useState","useEffect","CheckboxColumn","CheckAllCheckbox","ButtonRemoveAll","ActionIcons","generateActionLinks","sendRequest","Link","DataTable","listItems","tableData","columnWithLink","actions","setError","setIsLoading","setListItems","type","checkboxes","setCheckboxes","checkedAll","setCheckedAll","Object","entries","length","checkboxesObject","forEach","item","id","constructor","handleCheckbox","e","target","value","checked","name","handleAllChecked","preventDefault","newCheckedAll","newCheckboxes","keys","handleRemoveAll","idsToRemove","idsToStay","push","Number","_method","ids","join","then","response","console","log","data","hasOwnProperty","error","filter","includes","handleRemove","titleLinkType","rows","map","rowIndex","links","cols","field","columnIndex","checkboxCol","edit","view","checkAllRow"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport CheckboxColumn from './CheckboxColumn';\r\nimport CheckAllCheckbox from './CheckAllCheckbox';\r\nimport ButtonRemoveAll from './ButtonRemoveAll';\r\nimport ActionIcons from './ActionIcons';\r\nimport {generateActionLinks} from '../../helpers/tables';\r\nimport {sendRequest} from \"../../helpers/client-server\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nconst DataTable = ({listItems, tableData, columnWithLink, actions=[\"edit\", \"delete\"], setError, setIsLoading, setListItems, type}) => {\r\n\r\n  // checkbox states\r\n  const [checkboxes, setCheckboxes] = useState({});\r\n  const [checkedAll, setCheckedAll] = useState(false);\r\n  useEffect(() => {\r\n    if ( Object.entries(listItems).length !== 0 ) {\r\n      setCheckboxes(()=>{\r\n        let checkboxesObject = {};\r\n        listItems.forEach(item => {\r\n          checkboxesObject[item.id] = false;\r\n        });\r\n        return checkboxesObject;\r\n      });\r\n    }\r\n  }, [listItems] );\r\n\r\n  // if no elements to show\r\n  if ( Object.entries(listItems).length === 0 && listItems.constructor === Object ) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        Нет элементов для показа\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  // handle checkbox click\r\n  const handleCheckbox = (e) => {\r\n    const target = e.target;\r\n    const value = target.checked;\r\n    const name = target.name;\r\n    setCheckboxes(\r\n      {\r\n        ...checkboxes,\r\n        [name]: value\r\n      }\r\n    );\r\n  };\r\n\r\n\r\n  // handle all checkbox click\r\n  const handleAllChecked = e => {\r\n    e.preventDefault();\r\n    const newCheckedAll = !checkedAll;\r\n    setCheckboxes( () => {\r\n      let newCheckboxes = {};\r\n      Object.keys(checkboxes).forEach(function (item) {\r\n        newCheckboxes[item] = newCheckedAll;\r\n      });\r\n      return newCheckboxes;\r\n    } );\r\n    setCheckedAll(newCheckedAll);\r\n  };\r\n\r\n\r\n  // remove all\r\n  const handleRemoveAll = e => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    let idsToRemove = [],\r\n        idsToStay = [];\r\n    Object.keys(checkboxes).forEach(function (id) {\r\n      if ( checkboxes[id] === true )\r\n        idsToRemove.push(Number(id));\r\n      else\r\n        idsToStay.push(Number(id));\r\n    });\r\n\r\n    sendRequest(`${type}/multiple`, 'post', {_method: \"DELETE\", ids: idsToRemove.join(\",\")})\r\n      .then(response => {\r\n        console.log(response);\r\n\r\n        // on error\r\n        if ( response.data.hasOwnProperty('error') ) {\r\n          setError(response.data.error);\r\n          setIsLoading(false);\r\n          return false;\r\n        }\r\n\r\n        // remove items from list\r\n        setListItems(listItems.filter( item => idsToStay.includes(Number(item.id)) ));\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n\r\n  // remove one item by ID\r\n  const handleRemove = id => {\r\n    setIsLoading(true);\r\n\r\n    sendRequest(`${type}/${id}`, 'post', {_method: \"DELETE\"})\r\n      .then(response => {\r\n        console.log(response);\r\n\r\n        // on error\r\n        if ( response.data.hasOwnProperty('error') ) {\r\n          setError(response.data.error);\r\n          setIsLoading(false);\r\n          return false;\r\n        }\r\n\r\n        // remove items from list\r\n        setListItems(listItems.filter(item => item.id !== id));\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n\r\n  // choose link in title: editing or viewing\r\n  const titleLinkType = (actions.includes(\"show\")) ? \"show\" : \"edit\";\r\n\r\n  // rows\r\n  let rows = listItems.map( (item, rowIndex) => {\r\n\r\n    if ( Object.entries(checkboxes).length === 0 ) {\r\n      return null;\r\n    }\r\n\r\n    const links = generateActionLinks(actions, item.id, item);\r\n\r\n    // cols\r\n    let cols = tableData.map( (field, columnIndex) => {\r\n      return (\r\n        <td key={columnIndex}>{ (columnIndex === columnWithLink) ? (\r\n          <Link to={links[titleLinkType]}>{item[field]}</Link>\r\n        ) : item[field] }</td>\r\n      );\r\n    } );\r\n\r\n    const checkboxCol = actions.includes(\"delete\") ?\r\n      <CheckboxColumn id={item.id} handleCheckbox={handleCheckbox} isChecked={checkboxes[item.id]} /> :\r\n      null;\r\n\r\n    return (\r\n      <tr key={rowIndex}>\r\n        {checkboxCol}\r\n        {cols}\r\n        <ActionIcons\r\n          edit={links.edit}\r\n          view={links.view}\r\n          remove={\r\n            actions.includes(\"delete\") ?\r\n              handleRemove:\r\n              null\r\n          }\r\n          id={item.id}\r\n        />\r\n      </tr>\r\n    );\r\n  } );\r\n\r\n\r\n  const checkAllRow = actions.includes(\"delete\") ? (\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-6\"><CheckAllCheckbox handleAllChecked={handleAllChecked} /></div>\r\n      <div className=\"col-sm-6 text-right\"><ButtonRemoveAll handleRemoveAll={handleRemoveAll} /></div>\r\n    </div>\r\n  ) : null;\r\n\r\n\r\n  return (\r\n    <div>\r\n      {checkAllRow}\r\n      <table className=\"table table-striped items-table\">\r\n        <tbody>\r\n        {rows}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default DataTable;"]},"metadata":{},"sourceType":"module"}