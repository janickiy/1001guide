{"ast":null,"code":"var _jsxFileName = \"/var/www/1001guide.net/backend/resources/backend/src/components/templates/Templates.js\";\nimport React, { useState } from 'react';\nimport LanguagePicker from \"../forms/LanguagePicker\";\nimport Tabs from \"../includes/Tabs\";\nimport VariableList from \"./VariableList\";\nimport Form from \"./Form\";\n\nconst Templates = () => {\n  // page types\n  const pageTypes = {\n    country: \"Страна\",\n    location: \"Город\",\n    poi: \"Достопримечательность\",\n    tag: \"Тег\"\n  };\n  const [pageType, setPageType] = useState(\"country\"); // fields\n\n  const fields = {\n    title: \"Заголовок\",\n    announce: \"Текст сверху\",\n    title_bottom: \"Заголовок снизу\",\n    content: \"Текст снизу\",\n    meta_description: \"META Description\"\n  };\n  const wysiwygFields = [\"announce\", \"content\"];\n  const textareaFields = [\"meta_description\"];\n  const [field, setField] = useState(\"title\"); // changed\n\n  const [isChanged, setIsChanged] = useState(false);\n  /**\r\n   * Array of field values.\r\n   * Ex.:\r\n   * [\r\n   *  {\r\n   *    id,\r\n   *    frontendId,\r\n   *    value\r\n   *  }\r\n   * ]\r\n   */\n\n  const [values, setValues] = useState([]); // errors\n\n  const [errorText, setErrorText] = useState(null);\n  const [messageText, setMessageText] = useState(null); // language\n\n  const [language, setLanguage] = useState(window.localStorage.getItem(\"picked_lang\") || \"en\");\n  /**\r\n   * Pick Language\r\n   *\r\n   * @param {String} lang\r\n   */\n\n  const pickLanguage = lang => {\n    setLanguage(lang);\n    window.localStorage.setItem(\"picked_lang\", lang);\n  };\n  /**\r\n   * Select the tab\r\n   *\r\n   * @param {*} selected - selected value\r\n   * @param {Function} setSelected - setState function\r\n   * @return {*}\r\n   */\n\n\n  const selectTab = (selected, setSelected) => {\n    // if nothing changed - just switch the tab\n    if (!isChanged) return setSelected(selected); // either ask user to save changes\n\n    if (window.confirm('Сохранить изменения?')) {\n      console.log('Thing was saved to the database.');\n    } else {\n      console.log('Thing was not saved to the database.');\n    } // then switch the tab\n\n\n    setSelected(selected); // reset changes status\n\n    setIsChanged(false);\n  };\n  /**\r\n   * Select Page Type\r\n   * @param selected\r\n   */\n\n\n  const selectPageType = selected => {\n    selectTab(selected, setPageType);\n  };\n  /**\r\n   * Select Field\r\n   * @param selected\r\n   */\n\n\n  const selectField = selected => {\n    selectTab(selected, setField);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(LanguagePicker, {\n    setErrorText: setErrorText,\n    currentLanguage: language,\n    languageUpdate: pickLanguage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(Tabs, {\n    current: pageType,\n    setCurrent: selectPageType,\n    links: pageTypes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(Tabs, {\n    current: field,\n    setCurrent: selectField,\n    links: fields,\n    extraClassName: \"nav-pills\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, pageTypes[pageType], \": \", fields[field]), React.createElement(VariableList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(Form, {\n    name: field,\n    label: fields[field],\n    values: values,\n    setValues: setValues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }));\n};\n\nexport default Templates;","map":{"version":3,"sources":["/var/www/1001guide.net/backend/resources/backend/src/components/templates/Templates.js"],"names":["React","useState","LanguagePicker","Tabs","VariableList","Form","Templates","pageTypes","country","location","poi","tag","pageType","setPageType","fields","title","announce","title_bottom","content","meta_description","wysiwygFields","textareaFields","field","setField","isChanged","setIsChanged","values","setValues","errorText","setErrorText","messageText","setMessageText","language","setLanguage","window","localStorage","getItem","pickLanguage","lang","setItem","selectTab","selected","setSelected","confirm","console","log","selectPageType","selectField"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport LanguagePicker from \"../forms/LanguagePicker\";\r\nimport Tabs from \"../includes/Tabs\";\r\nimport VariableList from \"./VariableList\";\r\nimport Form from \"./Form\";\r\n\r\nconst Templates = () => {\r\n\r\n  // page types\r\n  const pageTypes = {\r\n    country: \"Страна\",\r\n    location: \"Город\",\r\n    poi: \"Достопримечательность\",\r\n    tag: \"Тег\"\r\n  };\r\n  const [pageType, setPageType] = useState(\"country\");\r\n\r\n  // fields\r\n  const fields = {\r\n    title: \"Заголовок\",\r\n    announce: \"Текст сверху\",\r\n    title_bottom: \"Заголовок снизу\",\r\n    content: \"Текст снизу\",\r\n    meta_description: \"META Description\"\r\n  };\r\n  const wysiwygFields = [\"announce\", \"content\"];\r\n  const textareaFields = [\"meta_description\"];\r\n  const [field, setField] = useState(\"title\");\r\n\r\n  // changed\r\n  const [isChanged, setIsChanged] = useState(false);\r\n\r\n  /**\r\n   * Array of field values.\r\n   * Ex.:\r\n   * [\r\n   *  {\r\n   *    id,\r\n   *    frontendId,\r\n   *    value\r\n   *  }\r\n   * ]\r\n   */\r\n  const [values, setValues] = useState([]);\r\n\r\n  // errors\r\n  const [errorText, setErrorText] = useState(null);\r\n  const [messageText, setMessageText] = useState(null);\r\n\r\n  // language\r\n  const [language, setLanguage] = useState(\r\n    window.localStorage.getItem(\"picked_lang\") || \"en\"\r\n  );\r\n\r\n\r\n  /**\r\n   * Pick Language\r\n   *\r\n   * @param {String} lang\r\n   */\r\n  const pickLanguage = lang => {\r\n    setLanguage(lang);\r\n    window.localStorage.setItem(\"picked_lang\", lang);\r\n  };\r\n\r\n\r\n  /**\r\n   * Select the tab\r\n   *\r\n   * @param {*} selected - selected value\r\n   * @param {Function} setSelected - setState function\r\n   * @return {*}\r\n   */\r\n  const selectTab = (selected, setSelected) => {\r\n    // if nothing changed - just switch the tab\r\n    if ( !isChanged )\r\n      return setSelected(selected);\r\n\r\n    // either ask user to save changes\r\n    if (window.confirm('Сохранить изменения?')) {\r\n      console.log('Thing was saved to the database.');\r\n    } else {\r\n      console.log('Thing was not saved to the database.');\r\n    }\r\n\r\n    // then switch the tab\r\n    setSelected(selected);\r\n    // reset changes status\r\n    setIsChanged(false);\r\n  };\r\n\r\n  /**\r\n   * Select Page Type\r\n   * @param selected\r\n   */\r\n  const selectPageType = selected => {\r\n    selectTab(selected, setPageType);\r\n  };\r\n\r\n  /**\r\n   * Select Field\r\n   * @param selected\r\n   */\r\n  const selectField = selected => {\r\n    selectTab(selected, setField);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <LanguagePicker\r\n        setErrorText={setErrorText}\r\n        currentLanguage={language}\r\n        languageUpdate={pickLanguage}\r\n      />\r\n\r\n      <Tabs\r\n        current={pageType}\r\n        setCurrent={selectPageType}\r\n        links={pageTypes}\r\n      />\r\n\r\n      <Tabs\r\n        current={field}\r\n        setCurrent={selectField}\r\n        links={fields}\r\n        extraClassName=\"nav-pills\"\r\n      />\r\n\r\n      <h2>{pageTypes[pageType]}: {fields[field]}</h2>\r\n\r\n      <VariableList/>\r\n\r\n      <Form\r\n        name={field}\r\n        label={fields[field]}\r\n        values={values}\r\n        setValues={setValues}\r\n      />\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Templates;\r\n\r\n"]},"metadata":{},"sourceType":"module"}