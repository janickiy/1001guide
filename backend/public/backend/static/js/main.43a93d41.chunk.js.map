{"version":3,"sources":["config.js","components/Sidebar.js","components/Dummy.js","components/Loading.js","components/ErrorBlock.js","helpers/client-server.js","components/tables/CheckboxColumn.js","components/tables/CheckAllCheckbox.js","components/tables/ButtonRemoveAll.js","components/tables/ActionIcons.js","components/tables/DataTable.js","helpers/tables.js","components/ItemList.js","components/tables/ButtonAdd.js","components/languages/Languages.js","components/forms/FormInput.js","components/forms/FormTextarea.js","components/forms/FormEditor.js","components/forms/FormCheckbox.js","components/forms/FormSelect.js","components/forms/FormHidden.js","components/forms/FormImage.js","components/forms/ButtonSave.js","components/forms/LanguagePicker.js","components/MessageBlock.js","components/includes/BackButton.js","components/forms/FormEdit.js","helpers/forms.js","components/languages/fields.js","components/languages/LanguageCreate.js","components/languages/LanguageEdit.js","components/LocalSettings.js","components/countries/Countries.js","components/countries/fields.js","components/countries/CountryCreate.js","components/countries/CountryEdit.js","components/locations/Locations.js","components/locations/fields.js","components/locations/LocationEdit.js","components/locations/LocationCreate.js","components/currencies/Currencies.js","components/currencies/fields.js","components/currencies/CurrencyCreate.js","components/currencies/CurrencyEdit.js","components/includes/Tabs.js","components/templates/VariableList.js","components/templates/Form.js","components/templates/Templates.js","components/poi/Poi.js","components/tags/Tags.js","components/tags/fields.js","components/tags/TagsCreate.js","components/tags/TagsTemplates.js","components/tags/TagsEdit.js","components/content_generator/ContentGenerator.js","components/codes/Codes.js","components/codes/fields.js","components/codes/CodeCreate.js","components/codes/CodeEdit.js","components/export/Export.js","components/forms/FormFile.js","components/import/Import.js","App.js","serviceWorker.js","index.js"],"names":["adminUrl","Sidebar","Number","localStorage","getItem","className","to","Dummy","Loading","role","ErrorBlock","children","routerUrl","siteUrl","sendRequest","url","method","dataToSend","noFormData","console","log","axios","data","FormData","Object","keys","forEach","key","set","CheckboxColumn","id","handleCheckbox","isChecked","type","name","value","onChange","checked","CheckAllCheckbox","handleAllChecked","href","onClick","ButtonRemoveAll","handleRemoveAll","ActionIcons","edit","remove","view","viewIcon","target","aria-hidden","removeLink","e","preventDefault","DataTable","listItems","tableData","columnWithLink","actions","setError","setIsLoading","setListItems","useState","checkboxes","setCheckboxes","checkedAll","setCheckedAll","useEffect","entries","length","checkboxesObject","item","constructor","handleRemove","_method","then","response","hasOwnProperty","error","filter","titleLinkType","includes","rows","map","rowIndex","links","currentUrl","show","slug","generateActionLinks","cols","field","columnIndex","checkboxCol","checkAllRow","newCheckedAll","newCheckboxes","idsToRemove","idsToStay","push","ids","join","ItemList","groupBy","extraParams","multilang","showTitle","paginationEnabled","requestMethod","requestError","setRequestError","isLoading","window","language","pageTitle","setPageTitle","updated","offset","setOffset","paginationLoading","setPaginationLoading","isPageLast","setIsPageLast","appContainer","document","querySelector","loadData","setTimeout","addEventListener","handleScroll","removeEventListener","assign","action","title","firstLoad","items","sort","a","b","fragment","catch","toString","loadMore","scrollTop","scrollHeight","innerHeight","content","ButtonAdd","link","Languages","FormInput","label","setValue","changedFieldFlag","markAsNoChanged","changedFieldBtn","placeholder","FormTextarea","FormEditor","editor","ClassicEditor","event","getData","FormCheckbox","inputId","htmlFor","FormSelect","variants","disabled","options","variant","FormHidden","FormImage","initImage","size","image","setImage","errorText","setErrorText","imgInput","useRef","imagePreview","src","alt","loadedContent","ref","file","current","files","post","ButtonSave","align","spinner","disbaled","divClassName","LanguagePicker","currentLanguage","languageUpdate","match","languageList","setLanguageList","selectOptions","option","MessageBlock","withRouter","props","history","goBack","FormEdit","fieldsToShow","itemType","itemId","trackChanges","fields","setFields","initValues","reduce","obj","values","setValues","changedFields","setChangedFields","messageText","setMessageText","setLanguage","redirect","setRedirect","Promise","resolve","fieldType","acc","addingField","lang","newValues","changed_fields","split","renderRedirect","simplySetValue","handleInputChange","handleEditorChange","handleCheckboxChange","formFields","changedField","messageBlock","message","onSubmit","required","success","editLink","urlPart","location","replace","generateEditLink","setItem","LanguageCreate","actionType","LanguageEdit","params","LocalSettings","loadedValues","handleChange","settingsList","fieldName","showInput","item_type","Countries","CountryCreate","CountryEdit","Locations","countryId","LocationEdit","LocationCreate","Currencies","CurrencyCreate","CurrencyEdit","Tabs","setCurrent","extraClassName","tabs","typeName","index","VariableList","variables","country","country_in","country_of","city","city_in","city_of","tours","year","poi","tag","variablesToList","v","Form","markAsChanged","addValue","frontendId","updateValue","newValue","oldValue","valueArray","removeValue","fieldLabel","fieldKey","displayField","style","top","right","position","addButton","Templates","pageTypes","pageType","setPageType","announce","title_bottom","meta_description","wysiwygFields","textareaFields","setField","isChanged","setIsChanged","isSaving","setIsSaving","loadValues","fieldValue","save","confirmToSave","confirm","selectTab","selected","setSelected","detectFieldType","handleSave","Poi","countries","setCountries","chosenCountry","setChosenCountry","initialCities","cities","setCities","chosenCity","setChosenCity","loadCountries","loadCities","countryList","country_code","resetCityList","cityList","api_id","data-country","Tags","TagsCreate","TagsTemplates","tagId","tag_id","TagsEdit","ContentGenerator","pageTypesSelected","setPageTypesSelected","languages","setLanguages","languagesSelected","setLanguagesSelected","status","setStatus","setGenerationStatus","timer","setInterval","clearInterval","objectToCheckBoxes","selectedItems","setSelectedItems","selectedValue","run","langs","page_types","handleRunClick","runBtn","Codes","CodeCreate","CodeEdit","Export","exportFileUrl","open","FormFile","setFile","Import","uploadFile","formData","append","config","headers","Boolean","App","path","exact","component","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43a93d41.chunk.js","sourcesContent":["export const adminUrl = '/server/admin-tours/';\n\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {adminUrl} from '../config';\n\nconst Sidebar = () => {\n\n  const templateFieldsUrl = Number(localStorage.getItem('dev')) === 1 ?\n    `${adminUrl}templates/` :\n    `${adminUrl}templates-fields/`;\n\n  return (\n    <div className=\"col-sm-3\">\n\n      <ul className=\"nav flex-column\">\n        <li className=\"nav-item\"><NavLink to={`${adminUrl}languages/`} className=\"nav-link\">Языки</NavLink></li>\n        <li className=\"nav-item\"><NavLink to={`${adminUrl}currencies/`} className=\"nav-link\">Валюты</NavLink></li>\n        <li className=\"nav-item\"><NavLink to={`${adminUrl}locations/`} className=\"nav-link\">Города и страны</NavLink></li>\n        <li className=\"nav-item\"><NavLink to={`${adminUrl}poi/`} className=\"nav-link\">Достопримечательности</NavLink></li>\n        <li className=\"nav-item\"><NavLink to={`${adminUrl}tags/`} className=\"nav-link\">Теги</NavLink></li>\n        <li className=\"nav-item\"><NavLink to={`${adminUrl}settings/`} className=\"nav-link\">Локальные настройки</NavLink></li>\n        <li className=\"nav-item\"><NavLink to={`${adminUrl}templates/`} className=\"nav-link\">Шаблоны</NavLink></li>\n        <li className=\"nav-item\"><NavLink to={`${adminUrl}generate/`} className=\"nav-link\">Генератор контента</NavLink></li>\n        <li className=\"nav-item\"><NavLink to={`${adminUrl}codes/`} className=\"nav-link\">Встроенные коды</NavLink></li>\n        <li className=\"nav-item\"><NavLink to={`${adminUrl}export/`} className=\"nav-link\">Экспорт</NavLink></li>\n        <li className=\"nav-item\"><NavLink to={`${adminUrl}import/`} className=\"nav-link\">Импорт</NavLink></li>\n      </ul>\n\n    </div>\n  );\n\n};\n\nexport default Sidebar;\n","import React from 'react';\r\n\r\nconst Dummy = () => {\r\n    return (\r\n        <div>\r\n            Choose menu item\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dummy;","import React from 'react';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"text-center loader-block\">\r\n      <div className=\"spinner-border text-success\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;","import React from 'react';\r\n\r\nconst ErrorBlock = ({children}) => {\r\n  return (\r\n    <div className=\"alert alert-danger\" role=\"alert\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorBlock;","import axios from 'axios';\n\nconst routerUrl = \"https://1001guide.net/server/api/\";\nconst siteUrl = \"https://1001guide.net/server\";\nconst uploadDir = siteUrl + \"/upload/\";\n\n/**\n * Send request to server\n *\n * @param {object} dataToSend\n * @param {string} url\n * @return {AxiosPromise<any>}\n */\nconst sendRequest = (url, method='get', dataToSend = null, noFormData=false) => {\n  console.log(url, method, noFormData);\n  if ( noFormData )\n    return axios[method](\n      routerUrl+url,\n      dataToSend\n    );\n\n  // if ( url.includes(\"poi\") ) {\n  //   console.log(\"POI!\");\n  //   return axios.post(routerUrl+\"poi/?lang=en\", dataToSend);\n  // }\n\n  let data = new FormData();\n  if ( dataToSend ) {\n    Object.keys(dataToSend).forEach(function (key) {\n      data.set(key, dataToSend[key]);\n    });\n  }\n  return axios[method](\n    routerUrl+url,\n    data\n  )\n};\n\n\nexport {routerUrl, siteUrl, uploadDir, sendRequest};\n","import React from 'react';\r\n\r\nconst CheckboxColumn = ({id, handleCheckbox, isChecked}) => {\r\n  return (\r\n    <td className=\"td-check\">\r\n      <div className=\"form-check\">\r\n        <input type=\"checkbox\" className=\"form-check-input delete-mark\" name={id} value=\"1\" onChange={handleCheckbox} checked={isChecked} />\r\n      </div>\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default CheckboxColumn;","import React from 'react';\r\n\r\nconst CheckAllCheckbox = ({handleAllChecked}) => {\r\n  return (\r\n    <p><a href=\"/remove/\" className=\"check-all check-all-link\" onClick={handleAllChecked}>Отметить все</a></p>\r\n  );\r\n};\r\n\r\nexport default CheckAllCheckbox;","import React from 'react';\r\n\r\nconst ButtonRemoveAll = ({handleRemoveAll}) => {\r\n  return (\r\n    <button type=\"button\" className=\"btn btn-danger\" onClick={handleRemoveAll}>Удалить выбранные</button>\r\n  );\r\n};\r\n\r\nexport default ButtonRemoveAll;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ActionIcons = ({edit, remove, id, view=null}) => {\r\n\r\n  const viewIcon = view ?\r\n    (<a href={view} target=\"_blank\"><i className=\"fa fa-eye\" aria-hidden=\"true\"></i></a>):\r\n    null;\r\n\r\n  const removeLink = remove ? (\r\n    <a href=\"/\" className=\"color-red\" onClick={e => {e.preventDefault(); remove(id)}}>\r\n      <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n    </a>\r\n  ) : null;\r\n\r\n  return (\r\n    <td className=\"col-actions\">\r\n      <Link to={edit}><i className=\"far fa-edit\"></i></Link>\r\n      {viewIcon}\r\n      {removeLink}\r\n\r\n    </td>\r\n  );\r\n\r\n};\r\n\r\nexport default ActionIcons;","import React, {useState, useEffect} from 'react';\r\nimport CheckboxColumn from './CheckboxColumn';\r\nimport CheckAllCheckbox from './CheckAllCheckbox';\r\nimport ButtonRemoveAll from './ButtonRemoveAll';\r\nimport ActionIcons from './ActionIcons';\r\nimport {generateActionLinks} from '../../helpers/tables';\r\nimport {sendRequest} from \"../../helpers/client-server\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nconst DataTable = ({listItems, tableData, columnWithLink, actions=[\"edit\", \"delete\"], setError, setIsLoading, setListItems, type}) => {\r\n\r\n  // checkbox states\r\n  const [checkboxes, setCheckboxes] = useState({});\r\n  const [checkedAll, setCheckedAll] = useState(false);\r\n  useEffect(() => {\r\n    if ( Object.entries(listItems).length !== 0 ) {\r\n      setCheckboxes(()=>{\r\n        let checkboxesObject = {};\r\n        listItems.forEach(item => {\r\n          checkboxesObject[item.id] = false;\r\n        });\r\n        return checkboxesObject;\r\n      });\r\n    }\r\n  }, [listItems] );\r\n\r\n  // if no elements to show\r\n  if ( Object.entries(listItems).length === 0 && listItems.constructor === Object ) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        Нет элементов для показа\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  // handle checkbox click\r\n  const handleCheckbox = (e) => {\r\n    const target = e.target;\r\n    const value = target.checked;\r\n    const name = target.name;\r\n    setCheckboxes(\r\n      {\r\n        ...checkboxes,\r\n        [name]: value\r\n      }\r\n    );\r\n  };\r\n\r\n\r\n  // handle all checkbox click\r\n  const handleAllChecked = e => {\r\n    e.preventDefault();\r\n    const newCheckedAll = !checkedAll;\r\n    setCheckboxes( () => {\r\n      let newCheckboxes = {};\r\n      Object.keys(checkboxes).forEach(function (item) {\r\n        newCheckboxes[item] = newCheckedAll;\r\n      });\r\n      return newCheckboxes;\r\n    } );\r\n    setCheckedAll(newCheckedAll);\r\n  };\r\n\r\n\r\n  // remove all\r\n  const handleRemoveAll = e => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    let idsToRemove = [],\r\n        idsToStay = [];\r\n    Object.keys(checkboxes).forEach(function (id) {\r\n      if ( checkboxes[id] === true )\r\n        idsToRemove.push(Number(id));\r\n      else\r\n        idsToStay.push(Number(id));\r\n    });\r\n\r\n    sendRequest(`${type}/multiple`, 'post', {_method: \"DELETE\", ids: idsToRemove.join(\",\")})\r\n      .then(response => {\r\n        console.log(response);\r\n\r\n        // on error\r\n        if ( response.data.hasOwnProperty('error') ) {\r\n          setError(response.data.error);\r\n          setIsLoading(false);\r\n          return false;\r\n        }\r\n\r\n        // remove items from list\r\n        setListItems(listItems.filter( item => idsToStay.includes(Number(item.id)) ));\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n\r\n  // remove one item by ID\r\n  const handleRemove = id => {\r\n    setIsLoading(true);\r\n\r\n    sendRequest(`${type}/${id}`, 'post', {_method: \"DELETE\"})\r\n      .then(response => {\r\n        console.log(response);\r\n\r\n        // on error\r\n        if ( response.data.hasOwnProperty('error') ) {\r\n          setError(response.data.error);\r\n          setIsLoading(false);\r\n          return false;\r\n        }\r\n\r\n        // remove items from list\r\n        setListItems(listItems.filter(item => item.id !== id));\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n\r\n  // choose link in title: editing or viewing\r\n  const titleLinkType = (actions.includes(\"show\")) ? \"show\" : \"edit\";\r\n\r\n  // rows\r\n  let rows = listItems.map( (item, rowIndex) => {\r\n\r\n    if ( Object.entries(checkboxes).length === 0 ) {\r\n      return null;\r\n    }\r\n\r\n    const links = generateActionLinks(actions, item.id, item);\r\n\r\n    // cols\r\n    let cols = tableData.map( (field, columnIndex) => {\r\n      return (\r\n        <td key={columnIndex}>{ (columnIndex === columnWithLink) ? (\r\n          <Link to={links[titleLinkType]}>{item[field]}</Link>\r\n        ) : item[field] }</td>\r\n      );\r\n    } );\r\n\r\n    const checkboxCol = actions.includes(\"delete\") ?\r\n      <CheckboxColumn id={item.id} handleCheckbox={handleCheckbox} isChecked={checkboxes[item.id]} /> :\r\n      null;\r\n\r\n    return (\r\n      <tr key={rowIndex}>\r\n        {checkboxCol}\r\n        {cols}\r\n        <ActionIcons\r\n          edit={links.edit}\r\n          view={links.view}\r\n          remove={\r\n            actions.includes(\"delete\") ?\r\n              handleRemove:\r\n              null\r\n          }\r\n          id={item.id}\r\n        />\r\n      </tr>\r\n    );\r\n  } );\r\n\r\n\r\n  const checkAllRow = actions.includes(\"delete\") ? (\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-6\"><CheckAllCheckbox handleAllChecked={handleAllChecked} /></div>\r\n      <div className=\"col-sm-6 text-right\"><ButtonRemoveAll handleRemoveAll={handleRemoveAll} /></div>\r\n    </div>\r\n  ) : null;\r\n\r\n\r\n  return (\r\n    <div>\r\n      {checkAllRow}\r\n      <table className=\"table table-striped items-table\">\r\n        <tbody>\r\n        {rows}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default DataTable;","import {siteUrl} from './client-server';\r\n\r\n/**\r\n * Generata list of action links\r\n *\r\n * @param {array} actions. [edit, delete, show, showFrontend]\r\n * @param {int} id\r\n * @return {object}\r\n */\r\nconst generateActionLinks = (actions, id, item=null) => {\r\n  const currentUrl = '';\r\n  let links = {\r\n    edit: currentUrl + id + '/edit/'\r\n  };\r\n\r\n  if ( actions.includes(\"show\") )\r\n    links.show = currentUrl + id + '/';\r\n\r\n  if ( actions.includes(\"view\") )\r\n    links.view = `${siteUrl}/${item.type}/${item.slug}.htm`;\r\n\r\n  return links;\r\n};\r\n\r\nexport {generateActionLinks};","import React, { useState, useEffect } from 'react';\r\nimport Loading from './Loading';\r\nimport ErrorBlock from './ErrorBlock';\r\nimport {sendRequest} from '../helpers/client-server';\r\nimport DataTable from './tables/DataTable';\r\n\r\n\r\nconst ItemList = ({\r\n  tableData, columnWithLink, actions, type, groupBy=null,\r\n  extraParams=null, multilang=false, showTitle=false,\r\n  paginationEnabled=false, requestMethod='get'\r\n}) => {\r\n\r\n  // set default states\r\n  const [requestError, setRequestError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [listItems, setListItems] = useState({});\r\n  const [language, setLanguage] = useState(\r\n    window.localStorage.getItem(\"picked_lang\") || \"en\"\r\n  );\r\n  const [pageTitle, setPageTitle] = useState(null);\r\n  const [updated, forceUpdate] = useState();\r\n\r\n  // pagination state\r\n  const [offset, setOffset] = useState(0);\r\n  const [paginationLoading, setPaginationLoading] = useState(false);\r\n  const [isPageLast, setIsPageLast] = useState(false);\r\n\r\n\r\n  // app DIV\r\n  const appContainer = document.querySelector('.App');\r\n\r\n\r\n  // get data from server\r\n  useEffect(() => {\r\n    loadData(true);\r\n  }, [language, type, updated]);\r\n\r\n\r\n  // load data on pagination\r\n  useEffect(() => {\r\n    if ( !offset || !paginationEnabled ) return;\r\n\r\n    // set loader and prevent double run\r\n    if ( paginationLoading ) return;\r\n    setPaginationLoading(true);\r\n\r\n    // bind scroll listener\r\n    setTimeout(\r\n      ()=>{\r\n        if ( isPageLast ) return;\r\n        setPaginationLoading(false);\r\n        appContainer.addEventListener('scroll', handleScroll);\r\n      },\r\n      1500\r\n    );\r\n\r\n    // load new items\r\n    loadData(false);\r\n\r\n    // unbind scroll listener on Component close\r\n    return () => {\r\n      setOffset(0);\r\n      appContainer.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [offset]);\r\n\r\n\r\n  // first run\r\n  useEffect(() => {\r\n\r\n    // scrolling pagination\r\n    if ( paginationEnabled ) {\r\n      appContainer.addEventListener('scroll', handleScroll);\r\n      return () => {\r\n        setOffset(0);\r\n        appContainer.removeEventListener('scroll', handleScroll);\r\n      };\r\n    }\r\n\r\n    if ( !showTitle ) return;\r\n    sendRequest(type, 'get', Object.assign({\r\n      action: \"show_title\",\r\n    }, extraParams))\r\n    .then(response => {\r\n      setPageTitle(response.data.title);\r\n    });\r\n  }, []);\r\n\r\n\r\n  /**\r\n   * Load item list from the Server\r\n   *\r\n   * @param firstLoad\r\n   */\r\n  const loadData = firstLoad => {\r\n    let dataToSend = {};\r\n    if ( offset )\r\n      dataToSend.offset = offset;\r\n    let url = type;\r\n    if ( extraParams )\r\n      dataToSend = Object.assign( dataToSend, extraParams );\r\n    if ( multilang ) {\r\n      url += `?lang=${language}`;\r\n      // dataToSend = Object.assign( dataToSend, {lang: language} );\r\n    }\r\n\r\n    sendRequest(url, requestMethod, dataToSend)\r\n    .then(response => {\r\n\r\n      console.log(response, dataToSend);\r\n\r\n      setIsLoading(false);\r\n\r\n      // on error\r\n      if ( response.data.error ) {\r\n        setRequestError(response.data.error);\r\n        return false;\r\n      }\r\n\r\n      // if items did not received\r\n      if ( !response.data.hasOwnProperty('items') ) {\r\n        setRequestError(\"List items didn't received\");\r\n        return false;\r\n      }\r\n\r\n      let items = response.data.items;\r\n\r\n      // sorting\r\n      if ( groupBy ) {\r\n        items = items.sort( (a,b) => {\r\n          if ( a.fragment > b.fragment ) return 1;\r\n          if ( a.fragment < b.fragment ) return -1;\r\n          return 0;\r\n        } );\r\n      }\r\n\r\n      // success\r\n      setListItems(\r\n        firstLoad ?\r\n          items :\r\n          [...listItems, ...items]\r\n      );\r\n\r\n      // mark last page\r\n      if ( !items.length ) {\r\n        setIsPageLast(true);\r\n      }\r\n\r\n      return true;\r\n\r\n    })\r\n\r\n    // request error\r\n    .catch(error => {\r\n      setRequestError(error.toString());\r\n    });\r\n  };\r\n\r\n\r\n  /**\r\n   * Load next page\r\n   */\r\n  const loadMore = () => {\r\n    appContainer.removeEventListener('scroll', handleScroll);\r\n    const offsetStep = 100;\r\n    setOffset(offset + offsetStep);\r\n  };\r\n\r\n\r\n  /**\r\n   * Scroll function\r\n   */\r\n  const handleScroll = () => {\r\n    const loadWhenPxRemain = 700;\r\n    const {scrollTop, scrollHeight} = appContainer;\r\n    if ( (scrollHeight - scrollTop - window.innerHeight) < loadWhenPxRemain ) {\r\n      loadMore();\r\n    }\r\n  };\r\n\r\n\r\n  const pickLanguage = lang => {\r\n    setLanguage(lang);\r\n    window.localStorage.setItem(\"picked_lang\", lang);\r\n  };\r\n\r\n\r\n  /**\r\n   * \"Load more\" btn or Loader\r\n   *\r\n   * @return {*}\r\n   * @constructor\r\n   */\r\n  const Paginator = () => {\r\n    if ( !paginationEnabled || isLoading || isPageLast )\r\n      return null;\r\n    return paginationLoading ?\r\n      <Loading /> :\r\n      (\r\n        <div className=\"text-center\">\r\n          <button className=\"btn btn-default\" onClick={loadMore}>Показать ещё</button>\r\n        </div>\r\n      );\r\n  };\r\n\r\n\r\n  // output\r\n  let content = null;\r\n  if ( isLoading && !requestError ) {\r\n    content = (\r\n      <Loading/>\r\n    );\r\n  }\r\n  else {\r\n    content = (\r\n      <DataTable\r\n        tableData={tableData}\r\n        columnWithLink={columnWithLink}\r\n        actions={actions}\r\n        listItems={listItems}\r\n        setError={setRequestError}\r\n        setIsLoading={setIsLoading}\r\n        setListItems={setListItems}\r\n        type={type}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {(requestError) ? (<ErrorBlock>{requestError}</ErrorBlock>) : null}\r\n      {pageTitle ?\r\n        (<h1>{pageTitle}</h1>) : null\r\n      }\r\n      {content}\r\n      <Paginator/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemList;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ButtonAdd = ({link=\"create/\"}) => {\r\n\r\n  return (\r\n    <p>\r\n      <Link to={link} className=\"btn btn-success mb-3\">+ Добавить</Link>\r\n    </p>\r\n  );\r\n\r\n};\r\n\r\nexport default ButtonAdd;","import React from 'react';\r\nimport ItemList from '../ItemList';\r\nimport ButtonAdd from \"../tables/ButtonAdd\";\r\n\r\nconst Languages = () => {\r\n  return (\r\n    <div>\r\n      <ButtonAdd />\r\n      <ItemList\r\n        tableData={[\"name\", \"code\"]}\r\n        columnWithLink={0}\r\n        actions={[\"edit\", \"delete\"]}\r\n        type=\"languages\"\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Languages;\r\n\r\n","import React from 'react';\r\n\r\nconst FormInput = ({\r\n  name, label, value, setValue, changedFieldFlag=false, markAsNoChanged=null\r\n}) => {\r\n\r\n  const changedFieldBtn = changedFieldFlag ?\r\n    <button type=\"button\" onClick={markAsNoChanged} className=\"btn\">\r\n      <i className=\"far fa-edit\"/> изменено вручную\r\n    </button>:\r\n    null;\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{label}</label>\r\n      <input type=\"text\" className=\"form-control\" name={name} value={value} placeholder={label} onChange={setValue} />\r\n      {changedFieldBtn}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default FormInput;","import React from 'react';\r\n\r\nconst FormTextarea = ({\r\n  name, label, value, setValue, changedFieldFlag=false, markAsNoChanged=null\r\n}) => {\r\n\r\n  const changedFieldBtn = changedFieldFlag ?\r\n    <button type=\"button\" onClick={markAsNoChanged} className=\"btn\">\r\n      <i className=\"far fa-edit\"/> изменено вручную\r\n    </button>:\r\n    null;\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{label}</label>\r\n      <textarea className=\"form-control\" name={name} value={value} placeholder={label} onChange={setValue} />\r\n      {changedFieldBtn}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default FormTextarea;","import React from 'react';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst FormEditor = ({\r\n  name, label, value, setValue, changedFieldFlag=false, markAsNoChanged=null\r\n}) => {\r\n\r\n  const changedFieldBtn = changedFieldFlag ?\r\n    <button type=\"button\" onClick={markAsNoChanged} className=\"btn\">\r\n      <i className=\"far fa-edit\"/> изменено вручную\r\n    </button>:\r\n    null;\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      {\r\n        label ? <label>{label}</label>: null\r\n      }\r\n      <CKEditor\r\n        name={name}\r\n        editor={ ClassicEditor }\r\n        data={value}\r\n        onChange={ ( event, editor ) => {\r\n          setValue(name, editor.getData());\r\n        } }\r\n      />\r\n      {changedFieldBtn}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default FormEditor;","import React from 'react';\r\n\r\nconst FormCheckbox = ({name, label, value, setValue}) => {\r\n\r\n  const inputId = name+'_'+value;\r\n\r\n  return (\r\n    <div className=\"form-check\">\r\n      <input className=\"form-check-input\" type=\"checkbox\"\r\n             name={name} id={inputId} value=\"1\"\r\n             checked={value===1} onChange={setValue}\r\n      />\r\n      <label className=\"form-check-label\" htmlFor={inputId}>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default FormCheckbox;","import React from 'react';\r\n\r\nconst FormSelect = ({name, label, value, setValue, variants, disabled=false}) => {\r\n\r\n  const options = variants.map((variant, key) => {\r\n    return (\r\n      <option value={variant.name} key={key}>{variant.value}</option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{label}</label>\r\n      <select className=\"form-control\" name={name} value={value} onChange={setValue} disabled={disabled}>\r\n        {options}\r\n      </select>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default FormSelect;","import React from 'react';\r\n\r\nconst FormHidden = ({name, value}) => {\r\n\r\n  return (\r\n    <input type=\"hidden\" name={name} value={value} />\r\n  );\r\n\r\n};\r\n\r\nexport default FormHidden;","import React, {useState, useRef} from 'react';\r\nimport axios from 'axios';\r\nimport {routerUrl, siteUrl} from \"../../helpers/client-server\";\r\nimport Loading from '../Loading';\r\n\r\nconst FormImage = ({name, value, initImage, setValue, size=\"1000x1500\"}) => {\r\n\r\n  const [image, setImage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorText, setErrorText] = useState(null);\r\n\r\n  const imgInput = useRef(null);\r\n\r\n\r\n  const handleImagePick = () => {\r\n    setIsLoading(true);\r\n    const file = imgInput.current.files[0];\r\n    if ( !file ) return;\r\n\r\n    let data = new FormData();\r\n    data.set(\"image\", file);\r\n    data.set(\"action\", \"image_upload\");\r\n    data.set(\"size\", size);\r\n\r\n    axios.post(routerUrl, data)\r\n    .then(response => {\r\n      if ( response.data.error )\r\n        setErrorText(response.data.error);\r\n      else {\r\n        setImage(response.data.image);\r\n        setValue(name, response.data.id);\r\n      }\r\n      setIsLoading(false);\r\n    })\r\n    .catch(error => {\r\n      setErrorText(error.toString());\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const imagePreview = (\r\n    <div className=\"image-preview\">\r\n      {(image || initImage) ? (<img src={siteUrl + (image || initImage)} alt=\"\"/>) : \"Изображение не выбрано\"}\r\n    </div>\r\n  );\r\n\r\n  const loadedContent = isLoading ?\r\n    (<Loading/>) :\r\n    errorText || imagePreview;\r\n\r\n  return (\r\n    <div className=\"card image-uploader mb-3\">\r\n      <div className=\"card-body\">\r\n        <div className=\"form-group\">\r\n          <label>Выберите изображение</label>\r\n          <input type=\"file\" className=\"form-control-file\" ref={imgInput} onChange={handleImagePick} />\r\n          <input type=\"hidden\" name={name} value={value} onChange={setValue} />\r\n        </div>\r\n        {loadedContent}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default FormImage;","import React from 'react';\r\n\r\nconst ButtonSave = ({label, isLoading, align=\"right\"}) => {\r\n\r\n  const spinner = isLoading ?\r\n    (<span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" />) :\r\n    null;\r\n\r\n  const disbaled = isLoading ? true : false;\r\n\r\n  const divClassName = `text-${align}`;\r\n\r\n  return (\r\n    <div className={divClassName}>\r\n      <p>\r\n        <button type=\"submit\" className=\"btn btn-success\" disabled={disbaled}>\r\n          {spinner}\r\n          {label}\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default ButtonSave;","import React, {useState, useEffect} from 'react';\r\nimport {sendRequest} from '../../helpers/client-server';\r\n\r\nconst LanguagePicker = ({currentLanguage, languageUpdate, setErrorText, match, label=\"Выберите язык редактирования\"}) => {\r\n\r\n  // languages list\r\n  const [languageList, setLanguageList] = useState([]);\r\n\r\n  // get list of languages\r\n  useEffect(() => {\r\n\r\n    sendRequest('languages/codes')\r\n      .then(response => {\r\n        if ( !response.data.items ) {\r\n          setErrorText(\"Can't get language list\");\r\n          return false;\r\n        }\r\n        setLanguageList(response.data.items);\r\n      })\r\n      .catch(error => {\r\n        setErrorText(error.toString());\r\n      });\r\n  }, []);\r\n\r\n  const selectOptions = languageList.map((option, key) => {\r\n    return (\r\n      <option value={option} key={key}>{option}</option>\r\n    );\r\n  });\r\n\r\n  // on lang change\r\n  const handleChange = e => {\r\n    languageUpdate(e.target.value);\r\n  };\r\n\r\n  // build select\r\n  return (\r\n    <div className=\"card mb-5 mt-3 bg-light\">\r\n      <div className=\"card-header\">\r\n        {label}\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <select name=\"language\" id=\"languages\" className=\"form-control\" value={currentLanguage} onChange={handleChange}>\r\n          {selectOptions}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default LanguagePicker;","import React from 'react';\r\n\r\nconst MessageBlock = ({children}) => {\r\n  return (\r\n    <div className=\"alert alert-success\" role=\"alert\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageBlock;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst BackButton = (props) => {\r\n  const goBack = (e) => {\r\n    e.preventDefault();\r\n    props.history.goBack();\r\n  };\r\n  return (\r\n    <div className=\"back-btn\">\r\n      <a href=\"/\" className=\"btn btn-light\" onClick={goBack}>&larr; Назад</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(BackButton);","import React, {useState, useEffect} from 'react';\nimport FormInput from './FormInput';\nimport FormTextarea from './FormTextarea';\nimport FormEditor from './FormEditor';\nimport FormCheckbox from './FormCheckbox';\nimport FormSelect from './FormSelect';\nimport FormHidden from './FormHidden';\nimport FormImage from './FormImage';\nimport ButtonSave from './ButtonSave';\nimport LanguagePicker from './LanguagePicker';\nimport ErrorBlock from '../ErrorBlock';\nimport MessageBlock from '../MessageBlock';\nimport BackButton from '../includes/BackButton';\nimport {sendRequest} from \"../../helpers/client-server\";\nimport { Redirect } from 'react-router-dom'\nimport {getFieldType} from '../../helpers/forms';\nimport {adminUrl} from \"../../config\";\n\nconst FormEdit = ({\n  fieldsToShow, itemType, itemId=null, multilang=false, extraParams=null,\n  trackChanges=false\n}) => {\n\n  const [fields, setFields] = useState(fieldsToShow);\n\n  const initValues = fieldsToShow.reduce((obj, item) => {\n    obj[item.name] = (item.hasOwnProperty(\"variants\")) ? item.variants[0].name : \"\";\n    return obj;\n  }, {});\n\n  // input values\n  const [values, setValues] = useState( initValues );\n\n  // changed fields\n  const [changedFields, setChangedFields] = useState([]);\n\n  // errors\n  const [errorText, setErrorText] = useState(null);\n  const [messageText, setMessageText] = useState(null);\n\n  // loading\n  const [isLoading, setIsLoading] = useState(false);\n\n  // language\n  const [language, setLanguage] = useState(\n    window.localStorage.getItem(\"picked_lang\") || \"en\"\n  );\n\n  // redirect\n  const [redirect, setRedirect] = useState(null);\n\n\n  // get field type if exists\n  useEffect(() => {\n    if ( !extraParams || !extraParams.hasOwnProperty('group_id') )\n      return;\n\n    getFieldType(extraParams['group_id'])\n    .then(fieldType => {\n\n      if ( !fieldType )\n        return;\n\n      setFields(fields => {\n        return fields.reduce( (acc, field) => {\n          let addingField = ( field.name === \"content\" ) ?\n            {...field, type: fieldType} :\n            field;\n          acc.push(addingField);\n          return acc;\n        }, [] );\n      });\n\n    });\n\n  }, []);\n\n\n  // get initial data from server\n  useEffect(() => {\n\n    if ( !itemId )\n      return;\n\n    // loading...\n    setIsLoading(true);\n\n    // make request properties\n\n    // send request\n    sendRequest(`${itemType}/${itemId}?lang=${language}`, 'get', {lang: language})\n      .then(response => {\n\n        // if object not found\n        if ( !response.data.item ) {\n          setErrorText(`Object with ID ${itemId} was not found`);\n          return;\n        }\n\n        // merge field properties\n        const item = response.data.item;\n        let newValues = Object.assign({}, initValues);\n        Object.keys(item).forEach(key => {\n          if ( !newValues.hasOwnProperty(key) || !item[key] )\n            return;\n          newValues[key] = item[key];\n        });\n\n        // update form fields\n        setValues(newValues);\n        setIsLoading(false);\n\n        // set changed fields\n        if ( trackChanges && item.changed_fields )\n          setChangedFields(item.changed_fields.split(','));\n\n        console.log(response);\n\n      })\n      // error\n      .catch(error => {\n        setIsLoading(false);\n        setErrorText(error.toString());\n      });\n\n\n\n  }, [language]);\n\n\n  const resetMessages = () => {\n    setMessageText(null);\n    setErrorText(null);\n  };\n\n\n  const pickLanguage = lang => {\n    setLanguage(lang);\n    window.localStorage.setItem(\"picked_lang\", lang);\n  };\n\n\n  // make a redirect\n  const renderRedirect = redirect ?\n    (<Redirect to={redirect} />) :\n    null;\n\n  // build a link to \"Edit\" page\n  const generateEditLink = itemId => {\n    const urlPart = window.location.href.split(adminUrl);\n    return adminUrl + urlPart[1].replace('/create/', '/'+itemId+'/edit/');\n  };\n\n\n  const simplySetValue = (name, value) => {\n    // mark field as changed\n    if ( trackChanges && !changedFields.includes(name) )\n      setChangedFields([...changedFields, name]);\n\n    // set value\n    return setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  // on inputs change\n  const handleInputChange = e => {\n    const target = e.target;\n    simplySetValue(target.name, target.value);\n  };\n\n  // on editor change\n  const handleEditorChange = (name, value) => {\n    if ( isLoading )\n      return;\n    simplySetValue(name, value);\n  };\n\n  // on checkbox change\n  const handleCheckboxChange = e => {\n    const target = e.target;\n    const checked = Number(target.checked);\n    simplySetValue(target.name, checked);\n  };\n\n\n  // on save/update\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setIsLoading(true);\n\n    // prepare data\n    const url = itemType + ( itemId ? `/${itemId}` : '' );\n    let dataToSend = Object.assign(\n      values,\n      itemId ? {'_method': 'PUT'} : {}\n    );\n\n    if ( multilang )\n      dataToSend = Object.assign(dataToSend, {lang: language});\n\n    if ( extraParams )\n      dataToSend = Object.assign(dataToSend, extraParams);\n\n    // preview tracked changes\n    if ( trackChanges )\n      dataToSend.changed_fields = changedFields.join(',');\n\n    // reset messages\n    resetMessages();\n\n    console.log(dataToSend);\n\n    // send to a server\n    sendRequest(url, \"post\", dataToSend)\n      .then(response => {\n\n        setIsLoading(false);\n\n        console.log('response', response);\n\n        const data = response.data;\n\n        // if some required fields are empty\n        if ( data.hasOwnProperty(\"error\") ) {\n          setErrorText(\n            data.error\n          );\n          return false;\n        }\n\n        // if some required fields are empty\n        if ( data.hasOwnProperty(\"required\") ) {\n          setErrorText(\n            \"Обязательные поля не заполнены: \" + data.required.join(', ')\n          );\n          return false;\n        }\n\n        // if it's okay\n        // on save new item\n        if ( !itemId ) {\n            console.log('new itemId', itemId);\n          if ( !data.hasOwnProperty(\"id\") ) {\n            return setErrorText(\"Не удалось создать элемент\");\n          }\n          const editLink = generateEditLink(data.id);\n          setRedirect(editLink);\n        }\n        // on update existing\n        else {\n          if ( data.hasOwnProperty(\"success\") )\n            setMessageText(data.success);\n        }\n      })\n      // request error\n      .catch(error => {\n          console.log('catch error', error);\n        setIsLoading(false);\n        setErrorText(error.toString());\n      });\n  };\n\n\n  // build form fields from list\n  const formFields = fields.map( (field, key) => {\n\n    const changedFieldFlag= trackChanges && changedFields.includes(field.name);\n\n    const markAsNoChanged = trackChanges ?\n      () => setChangedFields(\n        changedFields.filter(changedField => changedField !== field.name)\n      ):\n      null;\n\n    switch (field.type) {\n\n      // <textarea>\n      case \"textarea\":\n        return (\n          <FormTextarea\n            key={key}\n            name={field.name}\n            label={field.title}\n            value={values[field.name]}\n            setValue={handleInputChange}\n            changedFieldFlag={changedFieldFlag}\n            markAsNoChanged={markAsNoChanged}\n          />\n        );\n\n      // WYSIWYG\n      case \"editor\":\n        return (\n          <FormEditor\n            key={key}\n            name={field.name}\n            label={field.title}\n            value={values[field.name]}\n            setValue={handleEditorChange}\n            changedFieldFlag={changedFieldFlag}\n            markAsNoChanged={markAsNoChanged}\n          />\n        );\n\n      // <input type=\"checkbox\">\n      case \"checkbox\":\n        return (\n          <FormCheckbox\n            key={key}\n            name={field.name}\n            label={field.title}\n            value={values[field.name]}\n            setValue={handleCheckboxChange}\n          />\n        );\n\n      // <select>\n      case \"select\":\n        return (\n          <FormSelect\n            key={key}\n            name={field.name}\n            label={field.title}\n            value={values[field.name]}\n            setValue={handleInputChange}\n            variants={field.variants}\n          />\n        );\n\n      // input[type=\"hidden\"]\n      case \"hidden\":\n        return (\n          <FormHidden\n            key={key}\n            name={field.name}\n            value={values[field.name]}\n          />\n        );\n\n      // image uploader\n      case \"image\":\n        return (\n          <FormImage\n            key={key}\n            name={field.name}\n            value={values[field.name]}\n            initImage={values[\"img\"]}\n            size=\"197x116\"\n            setValue={simplySetValue}\n          />\n        );\n\n      case \"none\":\n        break;\n\n      // input[type=\"text\"]\n      default:\n        return (\n          <FormInput\n            key={key}\n            name={field.name}\n            label={field.title}\n            value={values[field.name]}\n            setValue={handleInputChange}\n            changedFieldFlag={changedFieldFlag}\n            markAsNoChanged={markAsNoChanged}\n          />\n        );\n\n    }\n\n\n  } );\n\n\n\n  // if messages show message block\n  const messageBlock = () => {\n    const error = (errorText) ? (<ErrorBlock>{errorText}</ErrorBlock>) : null;\n    const message = (messageText) ? (<MessageBlock>{messageText}</MessageBlock>) : null;\n    return (\n      <div>\n        {error}\n        {message}\n      </div>\n    );\n  };\n\n\n  return (\n    <div>\n      {renderRedirect}\n      <BackButton/>\n      {messageBlock()}\n      <form action=\"/bnd/\" onSubmit={handleSubmit}>\n        {(multilang) ?\n          (<LanguagePicker setErrorText={setErrorText} currentLanguage={language} languageUpdate={pickLanguage} />) :\n          null\n        }\n        {formFields}\n        {messageBlock()}\n        <ButtonSave label=\"Сохранить\" isLoading={isLoading} />\n      </form>\n    </div>\n  );\n\n};\n\nexport default FormEdit;\n","import {sendRequest} from './client-server';\r\n\r\nconst getFieldType = (id) => {\r\n\r\n  return new Promise( resolve => {\r\n\r\n    sendRequest({action: 'get_field_type', id: id})\r\n    .then(response => {\r\n      if ( response.data.hasOwnProperty('type') ) {\r\n        resolve(response.data['type']);\r\n      }\r\n      resolve(null);\r\n    });\r\n\r\n  } );\r\n\r\n\r\n\r\n};\r\n\r\nexport {getFieldType};","export const fieldsToShow = [\n\n  {\n    name: \"id\",\n    type: \"hidden\"\n  },\n\n  {\n    name: \"name\",\n    title: \"Название\",\n    type: \"text\"\n  },\n  {\n    name: \"code\",\n    title: \"Код языка\",\n    type: \"text\"\n  },\n  {\n    name: \"html_code\",\n    title: \"HTML код языка\",\n    type: \"text\"\n  },\n\n];\n","import React from 'react';\r\nimport FormEdit from '../forms/FormEdit';\r\nimport {fieldsToShow} from './fields';\r\n\r\nconst LanguageCreate = () => {\r\n\r\n  return (\r\n    <div className=\"create-page\">\r\n      <h1>Новый Язык</h1>\r\n      <FormEdit fieldsToShow={fieldsToShow} itemType=\"languages\" actionType=\"save\" />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default LanguageCreate;","import React from 'react';\r\nimport FormEdit from '../forms/FormEdit';\r\nimport {fieldsToShow} from './fields';\r\n\r\nconst LanguageEdit = ({match}) => {\r\n  console.log(fieldsToShow);\r\n  return (\r\n    <div className=\"edit-page\">\r\n      <h1>Редактирование языка</h1>\r\n      <FormEdit fieldsToShow={fieldsToShow} itemType=\"languages\" itemId={Number(match.params.id)} />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default LanguageEdit;","import React, {useState, useEffect} from 'react';\r\nimport Loading from './Loading';\r\nimport ErrorBlock from './ErrorBlock';\r\nimport {sendRequest} from '../helpers/client-server';\r\nimport LanguagePicker from './forms/LanguagePicker';\r\nimport ButtonSave from './forms/ButtonSave';\r\nimport MessageBlock from './MessageBlock';\r\nimport FormEditor from \"./forms/FormEditor\";\r\n\r\n\r\nconst LocalSettings = () => {\r\n\r\n  const [values, setValues] = useState({});\r\n  const [language, setLanguage] = useState(\r\n    window.localStorage.getItem(\"picked_lang\") || \"en\"\r\n  );\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [errorText, setErrorText] = useState(false);\r\n  const [messageText, setMessageText] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setIsLoading(true);\r\n\r\n    // get settings\r\n    sendRequest(`settings?lang=${language}`, 'get')\r\n    .then(response => {\r\n\r\n      if ( !response.data.items ) return;\r\n      const items = response.data.items;\r\n\r\n      // convert items to object\r\n      const loadedValues = Object.keys(items).reduce((obj, key) => {\r\n        return Object.assign(obj, {\r\n          [items[key].name]: {\r\n            value: items[key].value || '',\r\n            name: items[key].id,\r\n            title: items[key].title,\r\n            type: items[key].type\r\n          }\r\n        });\r\n      }, {});\r\n\r\n      setValues(values => {\r\n        return {\r\n          ...values,\r\n          ...loadedValues\r\n        }\r\n      });\r\n\r\n      setIsLoading(false);\r\n\r\n    });\r\n\r\n  }, [language]);\r\n\r\n\r\n  const handleChange = e => {\r\n    const target = e.target;\r\n    setValues({\r\n      ...values,\r\n      [target.name]: {\r\n        ...values[target.name],\r\n        value: target.value\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const handleEditorChange = (name, value) => {\r\n    setValues({\r\n      ...values,\r\n      [name]: {\r\n        ...values[name],\r\n        value: value\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const dataToSend = {\r\n      item_type: 'local_settings',\r\n      lang: language,\r\n      ...Object.keys(values).reduce((obj, key) => {\r\n        return Object.assign(obj, {\r\n          [key]: values[key].value\r\n        });\r\n      }, {})\r\n    };\r\n    sendRequest('settings', 'post', dataToSend)\r\n      .then(response => {\r\n        setIsLoading(false);\r\n        setMessageText(\"Изменения сохранены\");\r\n      });\r\n  };\r\n\r\n\r\n  const pickLanguage = lang => {\r\n    setLanguage(lang);\r\n    window.localStorage.setItem(\"picked_lang\", lang);\r\n  };\r\n\r\n\r\n  const showInput = fieldName => {\r\n    const field = values[fieldName];\r\n    switch (field[\"type\"]) {\r\n      case \"editor\":\r\n        return (\r\n          <FormEditor\r\n            setValue={handleEditorChange}\r\n            name={fieldName}\r\n            value={field[\"value\"]}\r\n          />\r\n        );\r\n      case \"textarea\":\r\n        return (\r\n          <textarea\r\n            type=\"text\" className=\"form-control\"\r\n            name={fieldName}\r\n            value={field[\"value\"]}\r\n            placeholder={field[\"title\"]}\r\n            onChange={handleChange}\r\n            onClick={e => {console.log(values)}}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <input\r\n            type=\"text\" className=\"form-control\"\r\n            name={fieldName}\r\n            value={field[\"value\"]}\r\n            placeholder={field[\"title\"]}\r\n            onChange={handleChange}\r\n            onClick={e => {console.log(values)}}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n\r\n  const settingsList = Object.keys(values).map((name, key) => {\r\n    return (\r\n      <div className=\"form-group\" key={key}>\r\n        <label>{values[name][\"title\"]}</label>\r\n        {showInput(name)}\r\n      </div>\r\n    );\r\n  });\r\n\r\n\r\n  // if messages show message block\r\n  const messageBlock = () => {\r\n    const error = (errorText) ? (<ErrorBlock>{errorText}</ErrorBlock>) : null;\r\n    const message = (messageText) ? (<MessageBlock>{messageText}</MessageBlock>) : null;\r\n    return (\r\n      <div>\r\n        {error}\r\n        {message}\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"local-settings\">\r\n      <LanguagePicker setErrorText={setErrorText} currentLanguage={language} languageUpdate={pickLanguage} />\r\n      {messageBlock()}\r\n      <form action=\"\" onSubmit={handleSubmit}>\r\n        {settingsList}\r\n        <ButtonSave label=\"Сохранить\" isLoading={isLoading} />\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default LocalSettings;","import React from 'react';\r\nimport ItemList from '../ItemList';\r\nimport ButtonAdd from \"../tables/ButtonAdd\";\r\n\r\nconst Countries = () => {\r\n  return (\r\n    <div>\r\n      <ButtonAdd />\r\n      <ItemList\r\n        tableData={[\"name\", \"country_code\", \"total_tours\"]}\r\n        columnWithLink={0}\r\n        actions={[\"edit\", \"delete\", \"show\"]}\r\n        type=\"countries\"\r\n        multilang={true}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Countries;\r\n\r\n","export const fieldsToShow = [\n\n  {\n    name: \"id\",\n    type: \"hidden\"\n  },\n  {\n    name: \"name\",\n    title: \"Название\",\n    type: \"text\"\n  },\n  {\n    name: \"name_in_case\",\n    title: 'Название с предлогом \"В\"',\n    type: \"text\"\n  },\n  {\n    name: \"name_of_case\",\n    title: 'Название с предлогом \"кого/чего\"',\n    type: \"text\"\n  },\n  {\n    name: \"slug\",\n    title: \"URL\",\n    type: \"text\"\n  },\n  {\n    name: \"country_code\",\n    title: \"Код страны\",\n    type: \"text\"\n  },\n\n  {\n    name: \"title\",\n    title: \"Заголовок\",\n    type: \"text\"\n  },\n  {\n    name: \"announce\",\n    title: \"Текст сверху\",\n    type: \"editor\"\n  },\n\n  {\n    name: \"title_bottom\",\n    title: \"Заголовок снизу\",\n    type: \"text\"\n  },\n  {\n    name: \"content\",\n    title: \"Текст снизу\",\n    type: \"editor\"\n  },\n\n  {\n    name: \"meta_description\",\n    title: \"META Description\",\n    type: \"textarea\"\n  },\n\n  {\n    name: \"changed_fields\",\n    type: \"hidden\"\n  },\n\n];\n","import React from 'react';\r\nimport FormEdit from '../forms/FormEdit';\r\nimport {fieldsToShow} from './fields';\r\n\r\nconst CountryCreate = () => {\r\n\r\n  return (\r\n    <div className=\"create-page\">\r\n      <h1>Новая страна</h1>\r\n      <FormEdit\r\n        fieldsToShow={fieldsToShow} itemType=\"countries\" actionType=\"save\"\r\n        multilang={true} trackChanges={true}\r\n      />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default CountryCreate;","import React from 'react';\r\nimport FormEdit from '../forms/FormEdit';\r\nimport {fieldsToShow} from './fields';\r\n\r\nconst CountryEdit = ({match}) => {\r\n  return (\r\n    <div className=\"edit-page\">\r\n      <h1>Редактирование страны</h1>\r\n      <FormEdit\r\n        fieldsToShow={fieldsToShow}\r\n        itemType=\"countries\"\r\n        itemId={Number(match.params.id)}\r\n        multilang={true}\r\n        trackChanges={true}\r\n      />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default CountryEdit;","import React from 'react';\r\nimport ItemList from '../ItemList';\r\nimport ButtonAdd from \"../tables/ButtonAdd\";\r\nimport BackButton from \"../includes/BackButton\";\r\n\r\nconst Locations = ({match}) => {\r\n  const countryId = match.params.id;\r\n\r\n  return (\r\n    <div>\r\n      <BackButton/>\r\n      <ButtonAdd />\r\n      <ItemList\r\n        tableData={[\"name\", \"country_code\", \"total_tours\"]}\r\n        columnWithLink={0}\r\n        actions={[\"edit\", \"delete\"]}\r\n        type={`locations/country/${countryId}/`}\r\n        multilang={true}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Locations;\r\n\r\n","export const fieldsToShow = [\n\n  {\n    name: \"id\",\n    type: \"hidden\"\n  },\n  {\n    name: \"name\",\n    title: \"Название\",\n    type: \"text\"\n  },\n  {\n    name: \"name_in_case\",\n    title: 'Название с предлогом \"В\"',\n    type: \"text\"\n  },\n  {\n    name: \"name_of_case\",\n    title: 'Название с предлогом \"кого/чего\"',\n    type: \"text\"\n  },\n  {\n    name: \"slug\",\n    title: \"URL\",\n    type: \"text\"\n  },\n\n  {\n    name: \"title\",\n    title: \"Заголовок\",\n    type: \"text\"\n  },\n  {\n    name: \"announce\",\n    title: \"Текст сверху\",\n    type: \"editor\"\n  },\n\n  {\n    name: \"title_bottom\",\n    title: \"Заголовок снизу\",\n    type: \"text\"\n  },\n  {\n    name: \"content\",\n    title: \"Текст снизу\",\n    type: \"editor\"\n  },\n\n  {\n    name: \"meta_description\",\n    title: \"META Description\",\n    type: \"textarea\"\n  },\n\n  {\n    name: \"country_code\",\n    title: \"Код страны\",\n    type: \"hidden\"\n  },\n\n  {\n    name: \"api_id\",\n    title: \"API ID\",\n    type: \"hidden\"\n  },\n  {\n    name: \"api_parent_id\",\n    title: \"API parent ID\",\n    type: \"hidden\"\n  },\n  {\n    name: \"type\",\n    title: \"API type\",\n    type: \"hidden\"\n  },\n  {\n    name: \"lat\",\n    title: \"Lat\",\n    type: \"hidden\"\n  },\n  {\n    name: \"long\",\n    title: \"Long\",\n    type: \"hidden\"\n  },\n\n  {\n    name: \"changed_fields\",\n    type: \"hidden\"\n  },\n\n];\n","import React from 'react';\r\nimport FormEdit from '../forms/FormEdit';\r\nimport {fieldsToShow} from './fields';\r\n\r\nconst LocationEdit = ({match}) => {\r\n  return (\r\n    <div className=\"edit-page\">\r\n      <h1>Редактирование локации</h1>\r\n      <FormEdit\r\n        fieldsToShow={fieldsToShow} itemType=\"locations\" itemId={Number(match.params.id)}\r\n        multilang={true} trackChanges={true}\r\n      />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default LocationEdit;","import React from 'react';\r\nimport FormEdit from '../forms/FormEdit';\r\nimport {fieldsToShow} from './fields';\r\n\r\nconst LocationCreate = () => {\r\n\r\n  return (\r\n    <div className=\"create-page\">\r\n      <h1>Новая локация</h1>\r\n      <FormEdit\r\n        fieldsToShow={fieldsToShow} itemType=\"locations\" actionType=\"save\"\r\n        multilang={true} trackChanges={true}\r\n      />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default LocationCreate;","import React from 'react';\r\nimport ItemList from '../ItemList';\r\nimport ButtonAdd from \"../tables/ButtonAdd\";\r\n\r\nconst Currencies = () => {\r\n  return (\r\n    <div>\r\n      <ButtonAdd />\r\n      <ItemList\r\n        tableData={[\"code\", \"sign\"]}\r\n        columnWithLink={0}\r\n        actions={[\"edit\", \"delete\"]}\r\n        type=\"currencies\"\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Currencies;\r\n\r\n","export const fieldsToShow = [\n\n  {\n    name: \"id\",\n    type: \"hidden\"\n  },\n\n  {\n    name: \"code\",\n    title: \"Код валюты\",\n    type: \"text\"\n  },\n  {\n    name: \"sign\",\n    title: \"Обозначение\",\n    type: \"text\"\n  }\n\n];\n","import React from 'react';\r\nimport FormEdit from '../forms/FormEdit';\r\nimport {fieldsToShow} from './fields';\r\n\r\nconst CurrencyCreate = () => {\r\n\r\n  return (\r\n    <div className=\"create-page\">\r\n      <h1>Новая валюта</h1>\r\n      <FormEdit fieldsToShow={fieldsToShow} itemType=\"currencies\" actionType=\"save\" />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default CurrencyCreate;","import React from 'react';\r\nimport FormEdit from '../forms/FormEdit';\r\nimport {fieldsToShow} from './fields';\r\n\r\nconst CurrencyEdit = ({match}) => {\r\n  console.log(fieldsToShow);\r\n  return (\r\n    <div className=\"edit-page\">\r\n      <h1>Редактирование валюты</h1>\r\n      <FormEdit fieldsToShow={fieldsToShow} itemType=\"currencies\" itemId={Number(match.params.id)} />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default CurrencyEdit;","import React from 'react';\r\n\r\n\r\nconst Tabs = ({links, current, setCurrent, extraClassName=\"nav-tabs\"}) => {\r\n\r\n  // make list of tabs\r\n  const tabs = Object.keys(links).map((typeName, index) => {\r\n    const handleClick = e => {\r\n      e.preventDefault();\r\n      setCurrent(typeName);\r\n    };\r\n\r\n    return (\r\n      <li className=\"nav-item\" key={index}>\r\n        <a className={`nav-link ${current === typeName ? 'active' : null}`}\r\n           href=\"#\" onClick={handleClick}\r\n        >\r\n          {links[typeName]}\r\n        </a>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  // display\r\n  return (\r\n    <ul className={`nav mb-3 ${extraClassName}`}>\r\n      {tabs}\r\n    </ul>\r\n  );\r\n\r\n};\r\n\r\n\r\nexport default Tabs;","import React from 'react';\r\n\r\nconst VariableList = () => {\r\n\r\n  const variables = {\r\n    country: \"Страна\",\r\n    country_in: \"Страна с предлогом В\",\r\n    country_of: \"Страна с предлогом кого/чего\",\r\n    city: \"Город\",\r\n    city_in: \"Город с предлогом В\",\r\n    city_of: \"Город с предлогом кого/чего\",\r\n    tours: \"Количество экскурсий\",\r\n    year: \"Текущий год\",\r\n    // price: \"Минимальная цена\",\r\n    poi: \"Название достопримечательности\",\r\n    tag: \"Название тега (для страницы тегов)\"\r\n  };\r\n\r\n  const variablesToList = Object.keys(variables).map(\r\n    (v, index) => <li key={index}>{`{${v}}`} &mdash; {variables[v]}</li>);\r\n\r\n  return (\r\n    <div className=\"alert alert-primary mb-3\" role=\"alert\">\r\n      Список используемых переменных:<br/>\r\n      <ul>{variablesToList}</ul>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default VariableList;","import React, {useState, useEffect} from 'react';\r\nimport FormInput from \"../forms/FormInput\";\r\nimport FormEditor from \"../forms/FormEditor\";\r\nimport FormTextarea from \"../forms/FormTextarea\";\r\n\r\n\r\nconst Form = ({values, setValues, name, label, type=\"text\", markAsChanged}) => {\r\n\r\n\r\n  useEffect(()=> {\r\n    console.log(values);\r\n    if ( !values.length ) {\r\n      addValue();\r\n    }\r\n  }, [values]);\r\n\r\n\r\n  /**\r\n   * Add new Input Field\r\n   */\r\n  const addValue = () => {\r\n    const frontendId = values.length ? values[values.length-1].frontendId+1 : 1;\r\n    setValues([...values, {\r\n      value: \"\",\r\n      frontendId,\r\n      id: null\r\n    }]);\r\n  };\r\n\r\n\r\n  /**\r\n   * Update value in Input Field\r\n   *\r\n   * @param {Number} frontendId - field identification\r\n   * @param {String} newValue\r\n   */\r\n  const updateValue = (frontendId, newValue) => {\r\n    markAsChanged();\r\n    setValues(\r\n      values.map(oldValue => {\r\n        if ( oldValue.frontendId !== frontendId )\r\n          return oldValue;\r\n        return {\r\n          value: newValue,\r\n          id: oldValue.id,\r\n          frontendId\r\n        };\r\n      })\r\n    )\r\n  };\r\n\r\n\r\n  /**\r\n   * Remove Input Value\r\n   *\r\n   * @param {Number} frontendId\r\n   */\r\n  const removeValue = frontendId => {\r\n    markAsChanged();\r\n    setValues(\r\n      values.filter(value => value.frontendId !== frontendId)\r\n    )\r\n  };\r\n\r\n\r\n  const getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n\r\n  /**\r\n   * Display Input Field\r\n   *\r\n   * @param {Number} frontendId\r\n   * @param {String} value\r\n   * @param {Function} setValue\r\n   * @param {String} label\r\n   * @param {Number} id - field ID in database\r\n   * @return {*}\r\n   */\r\n  const displayField = (frontendId, value, setValue, label, id=null) => {\r\n    // generate the key: existing fields should have a unique one,\r\n    // so we just use the server ID and increase by 1000 (to divide them from new fields)\r\n    const fieldKey = id ? 1000+id : frontendId;\r\n\r\n    const props = {\r\n      name: name+frontendId,\r\n      label,\r\n      value,\r\n      setValue\r\n    };\r\n    switch (type) {\r\n      // WYSIWYG\r\n      case \"editor\":\r\n        return <FormEditor {...props} key={fieldKey} />\r\n      // <textarea/>\r\n      case \"textarea\":\r\n        return <FormTextarea {...props} key={fieldKey} />;\r\n      // <input [text] />\r\n      default:\r\n        return <FormInput {...props} key={fieldKey} />\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * Convert Values to Input Fields\r\n   */\r\n  const fields = values.length ? values.map((valueArray, index) => {\r\n    const {frontendId, value, id} = valueArray;\r\n\r\n    // on change\r\n    const handleChange = type !== \"editor\" ?\r\n        e => {\r\n          const {target} = e;\r\n          updateValue(frontendId, target.value);\r\n        }:\r\n        (name, newValue)=> {\r\n          updateValue(frontendId, newValue);\r\n        };\r\n\r\n    // on remove\r\n    const handleRemove = e => {\r\n      e.preventDefault();\r\n      removeValue(frontendId);\r\n    };\r\n\r\n    // remove button\r\n    const removeBtn = (\r\n      <a href=\"#\" className=\"color-red\" onClick={handleRemove}>\r\n        <i className=\"fa fa-times\" aria-hidden=\"true\"/>\r\n      </a>\r\n    );\r\n\r\n    // label\r\n    const fieldLabel = `${label} (вариант ${index+1})`;\r\n\r\n    // display\r\n    return (\r\n      <div className=\"row\" key={frontendId}>\r\n        <div className=\"col-sm-12\">\r\n          {displayField(frontendId, value, handleChange, fieldLabel, id)}\r\n          <button\r\n            type=\"button\" className=\"btn btn-link color-red\" onClick={handleRemove}\r\n            style={{top: 0, right: 0, position: \"absolute\"}}\r\n          >\r\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }) : null;\r\n\r\n\r\n  /**\r\n   * \"Add New Field\" button\r\n   */\r\n  const addButton = (\r\n    <div className=\"text-right\">\r\n      <button type=\"button\" onClick={addValue} className=\"btn btn-warning\">\r\n        + Добавить вариант\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n\r\n  // display\r\n  return (\r\n    <div className=\"template-inputs mb-5\">\r\n      {fields}\r\n      {addButton}\r\n    </div>\r\n  );\r\n\r\n\r\n};\r\n\r\n\r\nexport default Form;","import React, {useState, useEffect} from 'react';\r\nimport LanguagePicker from \"../forms/LanguagePicker\";\r\nimport Tabs from \"../includes/Tabs\";\r\nimport VariableList from \"./VariableList\";\r\nimport Form from \"./Form\";\r\nimport ButtonSave from \"../forms/ButtonSave\";\r\nimport Loading from \"../Loading\";\r\nimport {sendRequest} from \"../../helpers/client-server\";\r\n\r\nconst Templates = () => {\r\n\r\n  // page types\r\n  const pageTypes = {\r\n    country: \"Страна\",\r\n    location: \"Город\",\r\n    poi: \"Достопримечательность\",\r\n  };\r\n  const [pageType, setPageType] = useState(\"country\");\r\n\r\n  // fields\r\n  const fields = {\r\n    title: \"Заголовок\",\r\n    announce: \"Текст сверху\",\r\n    title_bottom: \"Заголовок снизу\",\r\n    content: \"Текст снизу\",\r\n    meta_description: \"META Description\"\r\n  };\r\n  const wysiwygFields = [\"announce\", \"content\"];\r\n  const textareaFields = [\"meta_description\"];\r\n  const [field, setField] = useState(\"title\");\r\n\r\n  // changed\r\n  const [isChanged, setIsChanged] = useState(false);\r\n\r\n  /**\r\n   * Array of field values.\r\n   * Ex.:\r\n   * [\r\n   *  {\r\n   *    id,\r\n   *    frontendId,\r\n   *    value\r\n   *  }\r\n   * ]\r\n   */\r\n  const [values, setValues] = useState([]);\r\n\r\n  // errors\r\n  const [errorText, setErrorText] = useState(null);\r\n  const [messageText, setMessageText] = useState(null);\r\n\r\n  // language\r\n  const [language, setLanguage] = useState(\r\n    window.localStorage.getItem(\"picked_lang\") || \"en\"\r\n  );\r\n\r\n  // loading\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n\r\n  // load values\r\n  useEffect(()=> {\r\n    loadValues();\r\n  }, [field, pageType, language]);\r\n\r\n\r\n\r\n  /**\r\n   * Load values from the Server\r\n   *\r\n   * @return {Promise<void>}\r\n   */\r\n  const loadValues = async () => {\r\n    setIsLoading(true);\r\n    const response = await sendRequest(`templates/${language}/${pageType}/${field}`);\r\n    console.log(response);\r\n    setValues(\r\n      response.data.items && response.data.items.length ?\r\n        response.data.items.map((fieldValue, index) => {\r\n          fieldValue.frontendId = index;\r\n          return fieldValue;\r\n        }):\r\n        []\r\n    );\r\n    setIsLoading(false);\r\n  };\r\n\r\n\r\n  /**\r\n   * Save values on current page\r\n   *\r\n   * @return {Promise<void>}\r\n   */\r\n  const save = async () => {\r\n    setIsSaving(true);\r\n    const response = await sendRequest(\r\n      `templates/${language}/${pageType}/${field}`,\r\n      'post',\r\n      {\r\n        values,\r\n        _method: \"PUT\"\r\n      },\r\n      true\r\n    );\r\n    setIsSaving(false);\r\n    setIsChanged(false);\r\n  };\r\n\r\n\r\n  /**\r\n   * Show confirmation window: save or not\r\n   */\r\n  const confirmToSave = () => {\r\n    if (window.confirm('Сохранить изменения?')) {\r\n      save();\r\n    } else {\r\n      setIsChanged(false);\r\n    }\r\n    setIsChanged(false);\r\n  };\r\n\r\n\r\n  /**\r\n   * Pick Language\r\n   *\r\n   * @param {String} lang\r\n   */\r\n  const pickLanguage = lang => {\r\n    // ask for save\r\n    if ( isChanged )\r\n      confirmToSave();\r\n\r\n    // set language\r\n    setLanguage(lang);\r\n    window.localStorage.setItem(\"picked_lang\", lang);\r\n  };\r\n\r\n\r\n  /**\r\n   * Select the tab\r\n   *\r\n   * @param {*} selected - selected value\r\n   * @param {Function} setSelected - setState function\r\n   * @return {*}\r\n   */\r\n  const selectTab = (selected, setSelected) => {\r\n    // ask for save\r\n    if ( isChanged )\r\n      confirmToSave();\r\n\r\n    // switch the tab\r\n    setSelected(selected);\r\n  };\r\n\r\n  /**\r\n   * Select Page Type\r\n   * @param selected\r\n   */\r\n  const selectPageType = selected => {\r\n    selectTab(selected, setPageType);\r\n  };\r\n\r\n  /**\r\n   * Select Field\r\n   * @param selected\r\n   */\r\n  const selectField = selected => {\r\n    selectTab(selected, setField);\r\n  };\r\n\r\n\r\n  /**\r\n   * Detect field type\r\n   *\r\n   * @param {String} field\r\n   * @return {string}\r\n   */\r\n  const detectFieldType = field => {\r\n    if ( wysiwygFields.includes(field) )\r\n      return \"editor\";\r\n    if ( textareaFields.includes(field) )\r\n      return \"textarea\";\r\n    return \"text\";\r\n  };\r\n\r\n\r\n  const markAsChanged = () => {\r\n    if ( isChanged ) return;\r\n    setIsChanged(true);\r\n  };\r\n\r\n\r\n  const handleSave = e => {\r\n    e.preventDefault();\r\n    save();\r\n    console.log(\"saved!\");\r\n  };\r\n\r\n\r\n  const form = () => isLoading?\r\n    <Loading/>:\r\n    <form onSubmit={handleSave}>\r\n      <Form\r\n        name={field}\r\n        label={fields[field]}\r\n        values={values}\r\n        setValues={setValues}\r\n        type={detectFieldType(field)}\r\n        markAsChanged={markAsChanged}\r\n      />\r\n\r\n      <ButtonSave\r\n        label=\"Сохранить\"\r\n        isLoading={isSaving}\r\n      />\r\n    </form>;\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <LanguagePicker\r\n        setErrorText={setErrorText}\r\n        currentLanguage={language}\r\n        languageUpdate={pickLanguage}\r\n      />\r\n\r\n      <Tabs\r\n        current={pageType}\r\n        setCurrent={selectPageType}\r\n        links={pageTypes}\r\n      />\r\n\r\n      <Tabs\r\n        current={field}\r\n        setCurrent={selectField}\r\n        links={fields}\r\n        extraClassName=\"nav-pills\"\r\n      />\r\n\r\n      <h2>{pageTypes[pageType]}: {fields[field]} ({language})</h2>\r\n\r\n      <VariableList/>\r\n\r\n      {form()}\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Templates;\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport ItemList from '../ItemList';\r\nimport ButtonAdd from \"../tables/ButtonAdd\";\r\nimport FormSelect from \"../forms/FormSelect\";\r\nimport {sendRequest} from \"../../helpers/client-server\";\r\n\r\nconst Poi = ({match}) => {\r\n\r\n  // countries\r\n  const [countries, setCountries] = useState([{\r\n    name: \"all\",\r\n    value: \"Все страны\"\r\n  }]);\r\n  const [chosenCountry, setChosenCountry] = useState(\"all\");\r\n\r\n  // cities\r\n  const initialCities = [{\r\n    name: \"all\",\r\n    value: \"Все города\"\r\n  }];\r\n  const [cities, setCities] = useState(initialCities);\r\n  const [chosenCity, setChosenCity] = useState(\"all\");\r\n\r\n\r\n  // load initial data\r\n  useEffect(() => {\r\n    loadCountries();\r\n  }, []);\r\n\r\n  // load city list when country change\r\n  useEffect(() => {\r\n    loadCities();\r\n  }, [chosenCountry]);\r\n\r\n\r\n\r\n  /**\r\n   * Load Country list\r\n   *\r\n   * @return {Promise<void>}\r\n   */\r\n  const loadCountries = async () => {\r\n    const response = await sendRequest(\"countries?order=name\");\r\n    if ( !response.data.items ) return;\r\n    const countryList = response.data.items.map(country => {\r\n      return {\r\n        name: country.country_code,\r\n        value: country.name\r\n      }\r\n    });\r\n    setCountries([...countries, ...countryList]);\r\n  };\r\n\r\n\r\n  /**\r\n   * Reset city list\r\n   */\r\n  const resetCityList = () => {\r\n    setCities(initialCities);\r\n    setChosenCity('all');\r\n  };\r\n\r\n\r\n\r\n  /**\r\n   * Load City list\r\n   *\r\n   * @return {Promise<void>}\r\n   */\r\n  const loadCities = async () => {\r\n    // empty <select> if country wasn't chosen\r\n    if ( chosenCountry === 'all' ) {\r\n      resetCityList();\r\n      return;\r\n    }\r\n\r\n    // get list of cities\r\n    const response = await sendRequest(`locations/all?country=${chosenCountry}`);\r\n\r\n    // empty <select> if there's no cities\r\n    if ( !response.data.items  ) {\r\n      resetCityList();\r\n      return;\r\n    }\r\n\r\n    // fill teh <select>\r\n    const cityList = response.data.items.map(city => {\r\n      return {\r\n        name: city.api_id,\r\n        value: city.name\r\n      }\r\n    });\r\n    setCities([...initialCities, ...cityList]);\r\n  };\r\n\r\n\r\n  const handleCountryChange = e => {\r\n    setChosenCountry(e.target.value);\r\n  };\r\n\r\n\r\n  const handleCityChange = e => {\r\n    setChosenCity(e.target.value);\r\n  };\r\n\r\n\r\n  // display\r\n  return (\r\n    <div data-country={chosenCountry}>\r\n\r\n      <div className=\"row mb-5\">\r\n        <div className=\"col-sm-4\">\r\n          <FormSelect\r\n            name=\"country\"\r\n            label=\"Страна\"\r\n            value={chosenCountry}\r\n            setValue={handleCountryChange}\r\n            variants={countries}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <FormSelect\r\n            name=\"city\"\r\n            label=\"Город\"\r\n            value={chosenCity}\r\n            setValue={handleCityChange}\r\n            variants={cities}\r\n            disabled={chosenCountry === 'all'}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <ItemList\r\n        tableData={[\"name\", \"country_code\", \"total_tours\"]}\r\n        columnWithLink={0}\r\n        actions={[\"edit\"]}\r\n        type={`poi`}\r\n        multilang={false}\r\n        paginationEnabled={true}\r\n        requestMethod='post'\r\n        extraParams={{\r\n          country: chosenCountry,\r\n          city: chosenCity\r\n        }}\r\n        key={\r\n          chosenCity === 'all' ?\r\n            chosenCountry :\r\n            chosenCity\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Poi;\r\n\r\n","import React from 'react';\r\nimport ItemList from '../ItemList';\r\nimport ButtonAdd from \"../tables/ButtonAdd\";\r\n\r\nconst Tags = () => {\r\n  return (\r\n    <div>\r\n      <ButtonAdd />\r\n      <ItemList\r\n        tableData={[\"name\"]}\r\n        columnWithLink={0}\r\n        actions={[\"edit\", \"delete\"]}\r\n        type=\"tags\"\r\n        multilang={true}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Tags;\r\n\r\n","export const fieldsToShow = [\n\n  {\n    name: \"id\",\n    type: \"hidden\"\n  },\n  {\n    name: \"name\",\n    title: \"Название\",\n    type: \"text\"\n  },\n  {\n    name: \"get_your_guide_id\",\n    title: \"GetYourGuide API\",\n    type: \"text\"\n  },\n  {\n    name: \"slug\",\n    title: \"URL\",\n    type: \"text\"\n  },\n\n  /*\n  {\n    name: \"title\",\n    title: \"Заголовок\",\n    type: \"text\"\n  },\n  {\n    name: \"announce\",\n    title: \"Текст сверху\",\n    type: \"editor\"\n  },\n\n  {\n    name: \"title_bottom\",\n    title: \"Заголовок снизу\",\n    type: \"text\"\n  },\n  {\n    name: \"content\",\n    title: \"Текст снизу\",\n    type: \"editor\"\n  },\n\n  {\n    name: \"meta_description\",\n    title: \"META Description\",\n    type: \"textarea\"\n  },\n\n  {\n    name: \"changed_fields\",\n    type: \"hidden\"\n  },*/\n\n];\n","import React from 'react';\r\nimport FormEdit from '../forms/FormEdit';\r\nimport {fieldsToShow} from './fields';\r\n\r\nconst TagsCreate = () => {\r\n\r\n  return (\r\n    <div className=\"create-page\">\r\n      <h1>Новый тег</h1>\r\n      <FormEdit\r\n        fieldsToShow={fieldsToShow} itemType=\"tags\" actionType=\"save\"\r\n        multilang={true}\r\n      />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default TagsCreate;","import React, {useState, useEffect} from 'react';\r\nimport {sendRequest} from \"../../helpers/client-server\";\r\nimport Loading from \"../Loading\";\r\nimport Form from \"../templates/Form\";\r\nimport ButtonSave from \"../forms/ButtonSave\";\r\nimport LanguagePicker from \"../forms/LanguagePicker\";\r\nimport Tabs from \"../includes/Tabs\";\r\nimport VariableList from \"../templates/VariableList\";\r\n\r\n\r\n\r\nconst TagsTemplates = ({tagId}) => {\r\n\r\n  // values\r\n  const [values, setValues] = useState([]);\r\n\r\n  // fields\r\n  const fields = {\r\n    title: \"Заголовок\",\r\n    announce: \"Текст сверху\",\r\n    title_bottom: \"Заголовок снизу\",\r\n    content: \"Текст снизу\",\r\n    meta_description: \"META Description\"\r\n  };\r\n  const wysiwygFields = [\"announce\", \"content\"];\r\n  const textareaFields = [\"meta_description\"];\r\n  const [field, setField] = useState(\"title\");\r\n\r\n  // Page type (fixed)\r\n  const pageType = \"tag\";\r\n\r\n  // language\r\n  const [language, setLanguage] = useState(\r\n    window.localStorage.getItem(\"picked_lang\") || \"en\"\r\n  );\r\n\r\n  // loading\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n\r\n  // load values\r\n  useEffect(()=> {\r\n    loadValues();\r\n  }, [field, pageType, language]);\r\n\r\n\r\n\r\n  /**\r\n   * Load values from the Server\r\n   *\r\n   * @return {Promise<void>}\r\n   */\r\n  const loadValues = async () => {\r\n    setIsLoading(true);\r\n    const response = await sendRequest(`templates/${language}/${pageType}/${field}/${tagId}`);\r\n    console.log(response);\r\n    setValues(\r\n      response.data.items && response.data.items.length ?\r\n        response.data.items.map((fieldValue, index) => {\r\n          fieldValue.frontendId = index;\r\n          return fieldValue;\r\n        }):\r\n        []\r\n    );\r\n    setIsLoading(false);\r\n  };\r\n\r\n\r\n  /**\r\n   * Save values on current page\r\n   *\r\n   * @return {Promise<void>}\r\n   */\r\n  const save = async () => {\r\n    setIsSaving(true);\r\n    const response = await sendRequest(\r\n      `templates/${language}/${pageType}/${field}`,\r\n      'post',\r\n      {\r\n        values,\r\n        tag_id: tagId,\r\n        _method: \"PUT\"\r\n      },\r\n      true\r\n    );\r\n    setIsSaving(false);\r\n  };\r\n\r\n\r\n  /**\r\n   * Pick Language\r\n   *\r\n   * @param {String} lang\r\n   */\r\n  const pickLanguage = lang => {\r\n    setLanguage(lang);\r\n    window.localStorage.setItem(\"picked_lang\", lang);\r\n  };\r\n\r\n\r\n  const handleSave = e => {\r\n    e.preventDefault();\r\n    save();\r\n    console.log(\"saved!\");\r\n  };\r\n\r\n\r\n  /**\r\n   * Detect field type\r\n   *\r\n   * @param {String} field\r\n   * @return {string}\r\n   */\r\n  const detectFieldType = field => {\r\n    if ( wysiwygFields.includes(field) )\r\n      return \"editor\";\r\n    if ( textareaFields.includes(field) )\r\n      return \"textarea\";\r\n    return \"text\";\r\n  };\r\n\r\n\r\n  /**\r\n   * Select the tab\r\n   *\r\n   * @param {*} selected - selected value\r\n   * @param {Function} setSelected - setState function\r\n   * @return {*}\r\n   */\r\n  const selectTab = (selected, setSelected) => {\r\n    // switch the tab\r\n    setSelected(selected);\r\n  };\r\n\r\n  /**\r\n   * Select Field\r\n   * @param selected\r\n   */\r\n  const selectField = selected => {\r\n    selectTab(selected, setField);\r\n  };\r\n\r\n\r\n  const form = () => isLoading?\r\n    <Loading/>:\r\n    <form onSubmit={handleSave}>\r\n      <Form\r\n        name={field}\r\n        label={fields[field]}\r\n        values={values}\r\n        setValues={setValues}\r\n        type={detectFieldType(field)}\r\n        markAsChanged={()=>{}}\r\n      />\r\n\r\n      <ButtonSave\r\n        label=\"Сохранить\"\r\n        isLoading={isSaving}\r\n      />\r\n    </form>;\r\n\r\n\r\n\r\n  // display\r\n  return (\r\n    <div className=\"row mt-3\">\r\n      <div className=\"col-sm-12\">\r\n\r\n        <h2>Шаблонные поля тега</h2>\r\n\r\n        <LanguagePicker\r\n          setErrorText={()=>{}}\r\n          currentLanguage={language}\r\n          languageUpdate={pickLanguage}\r\n        />\r\n\r\n        <Tabs\r\n          current={field}\r\n          setCurrent={selectField}\r\n          links={fields}\r\n          extraClassName=\"nav-pills\"\r\n        />\r\n\r\n        <h3>{fields[field]} ({language})</h3>\r\n\r\n        <VariableList/>\r\n\r\n        {form()}\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\n\r\nexport default TagsTemplates;","import React from 'react';\r\nimport FormEdit from '../forms/FormEdit';\r\nimport {fieldsToShow} from './fields';\r\nimport TagsTemplates from \"./TagsTemplates\";\r\n\r\nconst TagsEdit = ({match}) => {\r\n  return (\r\n    <div className=\"edit-page\">\r\n      <h1>Редактирование тега</h1>\r\n      <FormEdit\r\n        fieldsToShow={fieldsToShow} itemType=\"tags\" itemId={Number(match.params.id)}\r\n        multilang={true}\r\n      />\r\n      <TagsTemplates tagId={Number(match.params.id)} />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default TagsEdit;","import React, {useState, useEffect} from 'react';\r\nimport {sendRequest} from \"../../helpers/client-server\";\r\n\r\n\r\nconst ContentGenerator = () => {\r\n\r\n  // page types\r\n  const pageTypes = {\r\n    country: \"Страна\",\r\n    location: \"Город\",\r\n    poi: \"Достопримечательность\",\r\n    tag: \"Тег\"\r\n  };\r\n  const [pageTypesSelected, setPageTypesSelected] = useState(Object.keys(pageTypes));\r\n\r\n  // languages\r\n  const [languages, setLanguages] = useState({});\r\n  const [languagesSelected, setLanguagesSelected] = useState([]);\r\n\r\n  // status\r\n  const [status, setStatus] = useState('checking');\r\n\r\n  // loading\r\n  const [generationRunning, setGenerationRunning] = useState(false);\r\n\r\n\r\n  // first run\r\n  useEffect(() => {\r\n\r\n    // get list of languages\r\n    sendRequest('languages/codes')\r\n    .then(response => {\r\n      setLanguages(\r\n        // convert language list to {ru: \"ru\", en: \"en\"...} format\r\n        response.data.items.reduce((acc, current) => {\r\n          acc[current] = current;\r\n          return acc;\r\n        }, {})\r\n      );\r\n      // mark all languages as selected\r\n      setLanguagesSelected(response.data.items);\r\n    })\r\n    .catch(error => {\r\n      console.log(error.toString());\r\n    });\r\n\r\n    // get generation status\r\n    setGenerationStatus();\r\n\r\n    // set timer on checking status\r\n    const timer = setInterval(setGenerationStatus, 10000);\r\n\r\n    return ()=> {\r\n      clearInterval(timer);\r\n    };\r\n\r\n  }, []);\r\n\r\n\r\n  // DEV: track language changes\r\n  useEffect(()=> {\r\n    console.log(languages, languagesSelected);\r\n  }, [languages, languagesSelected]);\r\n\r\n\r\n  const setGenerationStatus = () => {\r\n    sendRequest('templates/generate/status', 'post')\r\n    .then(response => {\r\n      setStatus(response.data.status);\r\n    })\r\n    .catch(error => {\r\n      console.log(error.toString());\r\n    });\r\n  };\r\n\r\n\r\n  /**\r\n   * Convert Object to Checkbox List\r\n   *\r\n   * @param {Object} obj - {name: label, name2: label2...}\r\n   * @param {Array} selectedItems\r\n   * @param {Function} setSelectedItems\r\n   * @return {*[]}\r\n   */\r\n  const objectToCheckBoxes = (obj, selectedItems, setSelectedItems) => {\r\n    return Object.keys(obj).map((value, index) => {\r\n\r\n      // is Checkbox marked as checked?\r\n      const isChecked = selectedItems.includes(value);\r\n\r\n      // handle check\r\n      const handleChange = () => {\r\n        setSelectedItems(\r\n          isChecked ?\r\n            // if uncheck - remove\r\n            selectedItems.filter(selectedValue => selectedValue !== value):\r\n            // if check - add\r\n            [...selectedItems, value]\r\n        )\r\n      };\r\n\r\n      return (\r\n        <div className=\"form-check\" key={index}>\r\n          <input className=\"form-check-input\" type=\"checkbox\"\r\n                 id={value} checked={isChecked} onChange={handleChange}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={value}>\r\n            {obj[value]}\r\n          </label>\r\n        </div>\r\n      )\r\n    });\r\n  };\r\n\r\n\r\n  /**\r\n   * Run generation proccess\r\n   *\r\n   * @return {Promise<void>}\r\n   */\r\n  const run = async () => {\r\n    setStatus(\"in_progress\");\r\n    const response = await sendRequest(\r\n      \"templates/generate\",\r\n      \"post\",\r\n      {\r\n        langs: languagesSelected,\r\n        page_types: pageTypesSelected\r\n      },\r\n      true\r\n    );\r\n    console.log(response);\r\n  };\r\n\r\n\r\n  const runBtn = () => {\r\n    switch (status) {\r\n      case 'checking':\r\n        return null;\r\n      case 'in_progress':\r\n        return (\r\n          <button\r\n            type=\"button\" className=\"btn btn-primary btn-lg btn-block\" disabled={true}\r\n          >\r\n            Идёт генерация...\r\n          </button>\r\n        )\r\n      default:\r\n        return (\r\n          <button\r\n            type=\"button\" className=\"btn btn-primary btn-lg btn-block\"\r\n            onClick={handleRunClick}\r\n          >\r\n            Запустить\r\n          </button>\r\n        )\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * Handle click on \"Run\" button\r\n   *\r\n   * @param e\r\n   */\r\n  const handleRunClick = e => {\r\n    run();\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row mb-5\">\r\n\r\n        <div className=\"col-sm-6\">\r\n          <h4>Языки</h4>\r\n          {objectToCheckBoxes(languages, languagesSelected, setLanguagesSelected)}\r\n        </div>\r\n\r\n        <div className=\"col-sm-6\">\r\n          <h4>Типы страниц</h4>\r\n          {objectToCheckBoxes(pageTypes, pageTypesSelected, setPageTypesSelected)}\r\n        </div>\r\n\r\n      </div>\r\n\r\n      {runBtn()}\r\n\r\n    </>\r\n  )\r\n\r\n};\r\n\r\n\r\nexport default ContentGenerator;","import React from 'react';\r\nimport ItemList from '../ItemList';\r\nimport ButtonAdd from \"../tables/ButtonAdd\";\r\n\r\nconst Codes = () => {\r\n  return (\r\n    <div>\r\n      <ButtonAdd />\r\n      <ItemList\r\n        tableData={[\"name\"]}\r\n        columnWithLink={0}\r\n        actions={[\"edit\", \"delete\"]}\r\n        type=\"codes\"\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Codes;\r\n\r\n","export const fieldsToShow = [\n\n  {\n    name: \"id\",\n    type: \"hidden\"\n  },\n\n  {\n    name: \"name\",\n    title: \"Название\",\n    type: \"text\"\n  },\n  {\n    name: \"value\",\n    title: \"Код для вставки\",\n    type: \"textarea\"\n  },\n\n];\n","import React from 'react';\r\nimport FormEdit from '../forms/FormEdit';\r\nimport {fieldsToShow} from './fields';\r\n\r\nconst CodeCreate = () => {\r\n\r\n  return (\r\n    <div className=\"create-page\">\r\n      <h1>Новый Код</h1>\r\n      <FormEdit fieldsToShow={fieldsToShow} itemType=\"codes\" actionType=\"save\" />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default CodeCreate;","import React from 'react';\r\nimport FormEdit from '../forms/FormEdit';\r\nimport {fieldsToShow} from './fields';\r\n\r\nconst CodeEdit = ({match}) => {\r\n  console.log(fieldsToShow);\r\n  return (\r\n    <div className=\"edit-page\">\r\n      <h1>Редактирование кода</h1>\r\n      <FormEdit fieldsToShow={fieldsToShow} itemType=\"codes\" itemId={Number(match.params.id)} />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default CodeEdit;","import React, {useState} from 'react';\r\nimport LanguagePicker from \"../forms/LanguagePicker\";\r\nimport FormSelect from \"../forms/FormSelect\";\r\nimport {routerUrl} from \"../../helpers/client-server\";\r\n\r\n\r\nconst Export = () => {\r\n\r\n  // language\r\n  const [language, setLanguage] = useState(\r\n    window.localStorage.getItem(\"picked_lang\") || \"en\"\r\n  );\r\n  const [errorText, setErrorText] = useState(false);\r\n\r\n  // page type\r\n  const pageTypes = [\r\n    {name: \"country\", value: \"Страны\"},\r\n    {name: \"city\", value: \"Города\"},\r\n    {name: \"poi\", value: \"Достопримечательности\"},\r\n  ];\r\n  const [pageType, setPageType] = useState(\"country\");\r\n\r\n\r\n  const handlePageTypeChange = e => {\r\n    setPageType(e.target.value);\r\n  };\r\n\r\n\r\n  const handleClick = () => {\r\n    const exportFileUrl = `${routerUrl}export/${language}/${pageType}`;\r\n    window.open(exportFileUrl);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\">\r\n          <h2>Экспорт</h2>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6\">\r\n          <LanguagePicker\r\n            label=\"Язык\"\r\n            currentLanguage={language}\r\n            languageUpdate={setLanguage}\r\n            setErrorText={setErrorText}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-6\">\r\n          <FormSelect\r\n            label=\"Тип страниц\"\r\n            name=\"type\"\r\n            variants={pageTypes}\r\n            value={pageType}\r\n            setValue={handlePageTypeChange}\r\n          />\r\n          <button className=\"btn btn-primary btn-lg btn-block\" onClick={handleClick}>\r\n            Экспорт\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\nexport default Export;","import React, {useState} from 'react';\r\n\r\n\r\nconst FormFile = ({file, setFile, label=\"Загрузите файл\"}) => {\r\n  return (\r\n    <div className=\"custom-file\">\r\n      <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" onChange={setFile} />\r\n      <label className=\"custom-file-label\" htmlFor=\"customFile\">{label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default FormFile;","import React, {useState, useEffect} from 'react';\r\nimport LanguagePicker from \"../forms/LanguagePicker\";\r\nimport FormSelect from \"../forms/FormSelect\";\r\nimport FormFile from \"../forms/FormFile\";\r\nimport Loading from \"../Loading\";\r\nimport MessageBlock from \"../MessageBlock\";\r\nimport {routerUrl} from \"../../helpers/client-server\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst Import = () => {\r\n\r\n  // loading\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // message\r\n  const [messageText, setMessageText] = useState(null);\r\n\r\n  // language\r\n  const [language, setLanguage] = useState(\r\n    window.localStorage.getItem(\"picked_lang\") || \"en\"\r\n  );\r\n  const [errorText, setErrorText] = useState(false);\r\n\r\n  // page type\r\n  const pageTypes = [\r\n    {name: \"country\", value: \"Страны\"},\r\n    {name: \"city\", value: \"Города\"},\r\n    {name: \"poi\", value: \"Достопримечательности\"},\r\n  ];\r\n  const [pageType, setPageType] = useState(\"country\");\r\n\r\n  // file\r\n  const [file, setFile] = useState(null);\r\n\r\n\r\n  const handlePageTypeChange = e => {\r\n    setPageType(e.target.value);\r\n  };\r\n\r\n\r\n  const handleFilePick = e => {\r\n    setFile(e.target.files[0]);\r\n    setMessageText(null);\r\n  };\r\n\r\n\r\n  const uploadFile = async () => {\r\n    setIsLoading(true);\r\n    const url = `${routerUrl}import/${language}/${pageType}`;\r\n    const formData = new FormData();\r\n    formData.append('xls', file);\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n    const response = await axios.post(url, formData,config);\r\n    console.log(response);\r\n    setIsLoading(false);\r\n    setMessageText(\"Импорт завершён\");\r\n  };\r\n\r\n\r\n  const handleClick = () => {\r\n    uploadFile();\r\n  };\r\n\r\n\r\n  const message = messageText ?\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        <MessageBlock>{messageText}</MessageBlock>\r\n      </div>\r\n    </div> :\r\n    null;\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\">\r\n          <h2>Импорт</h2>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6\">\r\n          <LanguagePicker\r\n            label=\"Язык\"\r\n            currentLanguage={language}\r\n            languageUpdate={setLanguage}\r\n            setErrorText={setErrorText}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-6\">\r\n          <FormSelect\r\n            label=\"Тип страниц\"\r\n            name=\"type\"\r\n            variants={pageTypes}\r\n            value={pageType}\r\n            setValue={handlePageTypeChange}\r\n          />\r\n          <FormFile\r\n            file={file}\r\n            setFile={handleFilePick}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 text-right\">\r\n            {\r\n              isLoading ?\r\n                <Loading/>:\r\n                <button className=\"btn btn-primary\" onClick={handleClick} disabled={!Boolean(file)}>\r\n                  Импорт\r\n                </button>\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        {message}\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\nexport default Import;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport {adminUrl} from './config';\n\nimport Sidebar from './components/Sidebar';\nimport Dummy from './components/Dummy';\nimport Languages from './components/languages/Languages';\nimport LanguageCreate from './components/languages/LanguageCreate';\nimport LanguageEdit from './components/languages/LanguageEdit';\nimport LocalSettings from './components/LocalSettings';\nimport Countries from \"./components/countries/Countries\";\nimport CountryCreate from \"./components/countries/CountryCreate\";\nimport CountryEdit from \"./components/countries/CountryEdit\";\nimport Locations from \"./components/locations/Locations\";\nimport LocationEdit from \"./components/locations/LocationEdit\";\nimport LocationCreate from \"./components/locations/LocationCreate\";\nimport Currencies from \"./components/currencies/Currencies\";\nimport CurrencyCreate from \"./components/currencies/CurrencyCreate\";\nimport CurrencyEdit from \"./components/currencies/CurrencyEdit\";\nimport Templates from \"./components/templates/Templates\";\nimport Poi from \"./components/poi/Poi\"\nimport Tags from \"./components/tags/Tags\";\nimport TagsCreate from \"./components/tags/TagsCreate\";\nimport TagsEdit from \"./components/tags/TagsEdit\";\nimport ContentGenerator from \"./components/content_generator/ContentGenerator\";\nimport Codes from \"./components/codes/Codes\";\nimport CodeCreate from \"./components/codes/CodeCreate\";\nimport CodeEdit from \"./components/codes/CodeEdit\";\nimport Export from \"./components/export/Export\";\nimport Import from \"./components/import/Import\";\n\n\nfunction App() {\n\n  return (\n    <div className=\"App container-full\">\n      <div className=\"row\">\n        <BrowserRouter>\n\n          <Sidebar/>\n\n          <div className=\"col-sm-9\">\n            <Switch>\n\n              <Route path=\"/\" exact component={Dummy} />\n\n              <Route path={`${adminUrl}languages/`} exact component={Languages} />\n              <Route path={`${adminUrl}languages/create/`} exact component={LanguageCreate} />\n              <Route path={`${adminUrl}languages/:id/edit/`} exact component={LanguageEdit} />\n\n              <Route path={`${adminUrl}currencies/`} exact component={Currencies} />\n              <Route path={`${adminUrl}currencies/create/`} exact component={CurrencyCreate} />\n              <Route path={`${adminUrl}currencies/:id/edit/`} exact component={CurrencyEdit} />\n\n              <Route path={`${adminUrl}locations/`} exact component={Countries} />\n              <Route path={`${adminUrl}locations/create`} exact component={CountryCreate} />\n              <Route path={`${adminUrl}locations/:id/edit/`} exact component={CountryEdit} />\n\n              <Route path={`${adminUrl}locations/:id/`} exact component={Locations} />\n              <Route path={`${adminUrl}locations/:country_id/create`} exact component={LocationCreate} />\n              <Route path={`${adminUrl}locations/:country_id/:id/edit`} exact component={LocationEdit} />\n\n              <Route path={`${adminUrl}poi/`} exact component={Poi} />\n              <Route path={`${adminUrl}poi/:id/edit`} exact component={LocationEdit} />\n\n              <Route path={`${adminUrl}tags/`} exact component={Tags} />\n              <Route path={`${adminUrl}tags/create`} exact component={TagsCreate} />\n              <Route path={`${adminUrl}tags/:id/edit/`} exact component={TagsEdit} />\n\n              <Route path={`${adminUrl}templates/`} exact component={Templates} />\n\n              <Route path={`${adminUrl}settings/`} exact component={LocalSettings} />\n\n              <Route path={`${adminUrl}generate/`} exact component={ContentGenerator} />\n\n              <Route path={`${adminUrl}codes/`} exact component={Codes} />\n              <Route path={`${adminUrl}codes/create`} exact component={CodeCreate} />\n              <Route path={`${adminUrl}codes/:id/edit/`} exact component={CodeEdit} />\n\n              <Route path={`${adminUrl}export/`} exact component={Export} />\n              <Route path={`${adminUrl}import/`} exact component={Import} />\n\n            </Switch>\n          </div>\n\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}